{"version":3,"sources":["assets/isotipoAmbiensa.png","config/API.js","store/Initializer.js","utils/security.js","utils/session.js","utils/API/auth.js","components/SpeedDial.js","assets/logo.png","utils/API/reporte.js","components/Notification.js","components/Drawer2.js","components/AppBar.js","assets/login.png","assets/register.png","containers/main/Register.js","utils/API/commerce.js","containers/main/Iniciar.js","containers/main/Login.js","utils/table.js","utils/API/sistemas.js","containers/panel/components/Crear.js","containers/panel/components/Eliminar.js","utils/API/clientes.js","containers/panel/components/Bar.js","utils/Date.js","utils/API/evaluaciones.js","utils/API/metricas.js","assets/noValue.svg","containers/panel/components/FiltroPanel.js","utils/API/dashboard.js","containers/panel/components/Print.js","containers/panel/Panel.js","App.js","reportWebVitals.js","store/actions/Actions.js","store/reducer/Reducer.js","store/Propager.js","store/Store.js","index.js"],"names":["ENTRYPOINT","GlobalContext","createContext","CryptoJS","require","key_code","desencriptarJson","encriptarDatos","AES","decrypt","toString","enc","Utf8","removeSession","localStorage","removeItem","axios","useStyles","makeStyles","theme","root","height","transform","flexGrow","speedDial","position","bottom","spacing","right","actions","icon","name","url","OpenIconSpeedDial","classes","React","useState","open","setOpen","hidden","SpeedDial","ariaLabel","className","SpeedDialIcon","openIcon","onClose","onOpen","map","action","SpeedDialAction","tooltipTitle","onClick","window","location","href","grow","menuButton","marginRight","title","display","breakpoints","up","search","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","drawerWidth","borderWidth","borderStyle","borderColor","margin","overflow","flexShrink","mixins","toolbar","overflowX","ResponsiveDrawer","props","history","useHistory","useLocation","useTheme","openCollapse","openCollapse2","useMediaQuery","down","info","setInfo","setNames","initializer","useContext","Initializer","setNotification","useEffect","usuario","setData","store","logout","setting","cargarUsuario","mostrarNotificacion","mostrarLoader","method","headers","Authorization","JSON","parse","token","then","res","response","data","type","notifications","catch","error","console","log","status","obtenerUsuario","names","last_names","cerrar","setTimeout","message","comprobador","val","pathname","Avatar","avatar","Typography","Divider","List","ListItem","ListItemIcon","ListItemText","Collapse","nested","CssBaseline","Fragment","Toolbar","IconButton","edge","style","getItem","content","children","Iniciar","nombre","setNombre","apellido","setApellido","correo","setCorreo","clave","setClave","form","noValidate","TextField","variant","marginBottom","marginTop","required","e","target","value","size","id","label","onChange","Button","setTab","playSound","body","registrar","email","password","submit","obtenerTodos","filtros","filter","desde","Math","floor","getTime","hasta","created","monto","order_value","raw","kpi1","valor","ventas","length","obtenerNúmeroProductos","setData2","setData3","setData4","params","values","labels","lastProducts","todos","i","push","inventory","available","stock","price","image","obtenerNúmeroCategorías","paper","flexDirection","showPassword","setShowPassword","entrar","setItem","component","fullWidth","FormControl","InputLabel","htmlFor","OutlinedInput","onKeyDown","key","endAdornment","InputAdornment","onMouseDown","event","preventDefault","labelWidth","Copyright","align","Link","Date","getFullYear","secondary","main","SignIn","dato","state","tab","undefined","hasOwnProperty","Container","maxWidth","Box","mt","TableIcons","RefreshIcon","forwardRef","ref","Add","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","LibraryAddCheckIcon","IndeterminateCheckBoxIcon","ImportExportIcon","VisibilityOutlinedIcon","MailOutlineIcon","AssignmentIndIcon","TelegramIcon","FormatListNumberedRtlIcon","PaymentIcon","GetAppIcon","AutorenewIcon","PhoneInTalkIcon","EventIcon","AccountCircleIcon","SaveIcon","LocalizationTable","pagination","labelDisplayedRows","nRowsSelected","searchPlaceholder","labelRowsSelect","emptyDataSourceMessage","filterRow","filterTooltip","Transition","Slide","direction","Crear","setUrl","descripcion","setDescripcion","sistema","description","limpiar","setSelected","carga","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","Grid","container","item","xs","DialogActions","resp","FormData","append","Accept","registrarSistema","editarSistema","eliminarSistema","BarChart","series","chart","zoom","enabled","resetIcon","offsetX","offsetY","fillColor","strokeColor","selection","background","border","plotOptions","bar","dataLabels","formatter","fontSize","colors","xaxis","categories","axisBorder","show","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","yaxis","text","options","utcDate","fecha","fechaFinal","dayInicio","getDate","monthInicio","getMonth","AlertDialogSlide","handleClose","md","MuiPickersUtilsProvider","utils","DateFnsUtils","locale","es","autoOk","ampm","inputVariant","format","date","setDesde","setHasta","startIcon","getFirst","getLast","filtrarFecha","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","element","this","productos","Component","card","card2","card3","card4","Sistemas","open2","setOpen2","selected","selected2","setSelected2","completas","incompletas","autorizados","noAutorizados","ingresos","egresos","mes","total","compras","factura","caja","dataVentas","setDataVentas","dataCategorias","setDataCategorias","dataProductos","setDataProductos","dataInventario","setDataInventario","setProductos","todosProductos","setTodosProductos","obtenerOrdenes","example","Alert","severity","Card","class","CardContent","gutterBottom","src","noValue","alt","srcset","icons","columns","field","render","rowData","localization","actionsColumnIndex","maxBodyHeight","headerStyle","textAlign","cellStyle","searchFieldStyle","elevation","App","notificacion","loader","sound","purple","colorP","colorS","createMuiTheme","primary","setWhite","dark","setDark","reason","overrides","MuiCssBaseline","themeFinal","tm","ThemeProvider","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","LinearProgress","zIndex","Drawer2","exact","path","Login","Panel","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CARGAR_USUARIO","LOGOUT","MOSTRAR_NOTIFICACION","MOSTRAR_LOADER","PLAY_SOUND","payload","Propager","Store","useReducer","Reducer","dispatch","Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b47b4fec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/isotipoAmbiensa.deb91b40.png\";","export const ENTRYPOINT=\"http://192.168.0.111:80/api/v1/\"\r\nexport const LARAVEL_SGI=\"http://localhost/api/v1/\"\r\nexport const PUBLIC_PATH=\"http://192.168.0.111:80/\"\r\n\r\n\r\n/*\r\nexport const ENTRYPOINT=\"https://api.ambiensa.info/api/v1/\"\r\nexport const LARAVEL_SGI=\"http://192.168.10.17:81/api/v1/\"\r\nexport const PUBLIC_PATH=\"https://api.ambiensa.info/\"*/","import {createContext} from 'react'\r\n\r\nconst GlobalContext=createContext();\r\nexport default GlobalContext\r\n","var CryptoJS = require(\"crypto-js\");\r\nvar key_code = \"86758576376418652952657157128997\";\r\n\r\nexport function encriptarJson(encriptarDatos) {\r\n    var ciphertext = CryptoJS.AES.encrypt(encriptarDatos, key_code).toString();\r\n    return ciphertext;\r\n}\r\n\r\nexport function desencriptarJson(encriptarDatos) {\r\n    var bytes = CryptoJS.AES.decrypt(encriptarDatos, key_code);\r\n    var originalText = bytes.toString(CryptoJS.enc.Utf8);\r\n    return originalText;\r\n}","export const guardarSession = (user) => {\r\n    localStorage.setItem('auth', user);\r\n}\r\nexport const removeSession=()=>{\r\n    localStorage.removeItem(\"auth\");\r\n}\r\nexport const obtenerSession = () => {\r\n\r\n    return localStorage.getItem('auth');\r\n\r\n}","import { guardarSession,obtenerSession,removeSession } from '../session'\r\nimport {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT} from '../../config/API'\r\nimport {play} from '../../utils/sound'\r\n\r\nconst axios = require('axios');\r\nexport const upload = (data, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  var resp = new FormData()\r\n  resp.append('file', data.image_file)\r\n  \r\n  let url = ENTRYPOINT+\"upload\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      \r\n    });\r\n};\r\nexport const registrar = (data, setTab,store) => {\r\n  const { cargarUsuario ,playSound,mostrarNotificacion,mostrarLoader} = store\r\n  \r\n  let url = ENTRYPOINT+\"users\"\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body:data,\r\n    headers: { 'Accept': 'application/json' }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n      mostrarLoader(false)\r\n      mostrarNotificacion({type:\"success\",message:response.message})\r\n      setTab(0)\r\n     }else{\r\n      mostrarNotificacion({type:\"error\",message:response.message})\r\n      mostrarLoader(false)\r\n   \r\n     }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false)\r\n\r\n      \r\n\r\n\r\n    });\r\n}\r\nexport const editarUsuario = (data,     uploadImage,store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n\r\n  let url = ENTRYPOINT+\"user\";\r\n  let setting = {\r\n    method: \"PUT\",\r\n    url: url,\r\n    params:data,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n    \r\n        window.location.reload();\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const iniciarSesion = (email, password, store,history) => {\r\n  const { cargarUsuario ,playSound,mostrarNotificacion,mostrarLoader} = store\r\n  var raw = {\r\n    \"email\": email,\r\n    \"password\": password\r\n  }\r\n  let url = ENTRYPOINT+\"auth/login\"\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: raw,\r\n    body:raw,\r\n    headers: { 'Accept': 'application/json' }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n      let user={\r\n        user:response.user,\r\n        token: response.token\r\n      }\r\n      let encrypt= encriptarJson(JSON.stringify(user))\r\n    \r\n      cargarUsuario(encrypt)\r\n      guardarSession(encrypt);\r\n      mostrarLoader(false)\r\n      mostrarNotificacion({type:\"success\",message:response.message})\r\n    \r\n      /* if(response.user.type_user==\"client\"){\r\n        history.push('dashboard');\r\n      }else{\r\n        history.push('dashboard_asesor');\r\n      } */\r\n      window.location.href='/panel';\r\n\r\n     }else{\r\n      mostrarNotificacion({type:\"error\",message:response.message})\r\n      mostrarLoader(false)\r\n   \r\n     }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false)\r\n \r\n      \r\n\r\n\r\n    });\r\n}\r\nexport const cerrarSesion = (store) => {\r\n  const { usuario,logout,mostrarNotificacion ,playSound,mostrarLoader} = store\r\n\r\n  let url = ENTRYPOINT+\"auth/logout\"\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n\r\n    headers: {\r\n       'Accept': 'application/json',\r\n      'Authorization':'Bearer '+JSON.parse(desencriptarJson(usuario)).token\r\n      }\r\n\r\n  };\r\n  mostrarLoader(true)\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      logout()\r\n      removeSession()\r\n     \r\n      mostrarNotificacion({type:\"success\",message:res.data.message})\r\n      mostrarLoader(false)\r\n      window.location.href=\"/bienvenida\"\r\n\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false)\r\n\r\n      let response = error.data\r\n\r\n   \r\n    });\r\n}\r\nexport const obtenerUsuario = (setData,setNotification,store) => {\r\n  const { usuario,logout, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"user\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n      setNotification(response.notifications)\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n    if (error.response) {\r\n \r\n      console.log(error.response.status);\r\n      if(error.response.status==401){\r\n        logout()\r\n        removeSession()\r\n        window.location.href=\"/login\"\r\n      }\r\n    }\r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerPhoto = (setFile,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"user_photo\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setFile(response)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentReturnedIcon from '@material-ui/icons/AssignmentReturned';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: 380,\r\n    transform: 'translateZ(0px)',\r\n    flexGrow: 1,\r\n  },\r\n  speedDial: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: 'Compra',url:'/compras' },\r\n  { icon: <AssignmentIcon />, name: 'Tarea',url:'/tareas' },\r\n  { icon: <PostAddIcon />, name: 'Productos',url:'/productos' },\r\n  { icon: <AssignmentReturnedIcon />, name: 'Pedidos',url:'/pedidos' },\r\n  { icon: <StoreIcon />, name: 'Bodegas',url:'/bodegas' },\r\n\r\n];\r\n\r\nexport default function OpenIconSpeedDial() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [hidden, setHidden] = React.useState(false);\r\n\r\n  const handleVisibility = () => {\r\n    setHidden((prevHidden) => !prevHidden);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n \r\n    setOpen(false);\r\n  };\r\n  const ir =(url) => {\r\n\r\n    window.location.href = \"/inventario\"+url;\r\n  }\r\n  return (\r\n   \r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial openIcon example\"\r\n        className={classes.speedDial}\r\n        hidden={hidden}\r\n        icon={<SpeedDialIcon openIcon={<EditIcon />} />}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}\r\n      >\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={()=>ir(action.url)}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n  \r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.11007458.png\";","\r\nimport {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const downloadFiles = (tipo,store,filter) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n    let params = \"\"\r\n  if (filter.length != 0) {\r\n    filter.map((e) => {\r\n      params += \"&\" + e.tipo + \"=\" + e.valor\r\n    })\r\n  }\r\n    let url = ENTRYPOINT+\"reporte?tipo=\"+tipo+params;\r\n    let setting = {\r\n      method: \"GET\",\r\n\r\n      url: url,\r\n      responseType: 'blob',\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if(res.data.type!=\"error\"){\r\n      \r\n\r\n          var _url = window.URL.createObjectURL(new Blob([response], { type: \"application/pdf\" }));\r\n          window.open(_url, \"_blank\").focus(); // window.open + focus\r\n\r\n        \r\n          mostrarLoader(false);\r\n        \r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          \r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n     \r\n      });\r\n  };\r\n\r\n\r\n\r\n  export const ObtenerGrafico1 = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"sales/last_months\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\n\r\nexport const obtenerNotificacionesMenu = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"notification/menu\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\n  export const printVoucher = (id,modulo,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"voucher?id=\"+id+\"&module=\"+modulo\r\n    let setting = {\r\n      method: \"GET\",\r\n\r\n      url: url,\r\n      responseType: 'blob',\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if(res.data.type!=\"error\"){\r\n      \r\n\r\n          var _url = window.URL.createObjectURL(new Blob([response], { type: \"application/pdf\" }));\r\n          window.open(_url, \"_blank\").focus(); // window.open + focus\r\n\r\n        \r\n          mostrarLoader(false);\r\n        \r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          \r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n     \r\n      });\r\n  };","import React from 'react';\r\nimport { alpha, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Initializer from '../store/Initializer'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentReturnedIcon from '@material-ui/icons/AssignmentReturned';\r\n\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport TransformIcon from '@material-ui/icons/Transform';\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\n\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsNone';\r\nimport { obtenerNotificacionesMenu } from '../utils/API/reporte'\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n    const [data, setData] = React.useState({tareas:0,pedidos:0,transferencias:0,compras:0,ajustes:0});\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null&&isMenuOpen==true) {\r\n            obtenerNotificacionesMenu(setData, initializer)\r\n        }\r\n    }, [initializer.usuario,isMenuOpen]);\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n            elevation={1}\r\n        >\r\n            <Typography  color=\"initial\" style={{fontWeight:'bold',textAlign:'center'}}>Actividad</Typography>\r\n            { (data.tareas+ data.pedidos+ data.ajustes+data.compras+data.transferencias)==0&&(<MenuItem onClick={handleMenuClose}> <ClearIcon style={{marginRight:5}}/> Sin nueva actividad</MenuItem>)}\r\n            {\r\n                data.tareas != 0 && (<MenuItem onClick={handleMenuClose}> <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={data.tareas} color=\"secondary\">\r\n                        <AssignmentIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                    Tareas</MenuItem>)\r\n            }\r\n            {\r\n                data.pedidos != 0 && (\r\n            <MenuItem onClick={handleMenuClose}> <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <Badge badgeContent={data.pedidos} color=\"secondary\">\r\n                    <AssignmentReturnedIcon />\r\n                </Badge>\r\n            </IconButton>Pedidos</MenuItem>\r\n            )\r\n            }\r\n            {\r\n                data.compras != 0 && (\r\n            <MenuItem onClick={handleMenuClose}> <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <Badge badgeContent={data.compras} color=\"secondary\">\r\n                    <AllInboxIcon />\r\n                </Badge>\r\n            </IconButton>Compras</MenuItem>\r\n            )}\r\n                {\r\n                data.ajustes != 0 && (\r\n            <MenuItem onClick={handleMenuClose}> <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <Badge badgeContent={data.ajustes} color=\"secondary\">\r\n                    <TransformIcon />\r\n                </Badge>\r\n            </IconButton>Ajuste</MenuItem>\r\n\r\n                )}\r\n                 {\r\n                data.transferencias != 0 && (\r\n            <MenuItem onClick={handleMenuClose}> <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <Badge badgeContent={data.transferencias} color=\"secondary\">\r\n                    <TransferWithinAStationIcon />\r\n                </Badge>\r\n            </IconButton>Trasnferencias</MenuItem> )}\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <IconButton\r\n\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <Badge invisible={props.notification==false||(data.tareas+ data.pedidos+ data.ajustes+data.compras+data.transferencias)==0} color=\"secondary\" variant=\"dot\" > <NotificationsIcon style={{ color: '#1e88e5' }} /></Badge> \r\n\r\n            </IconButton>\r\n\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport CallMissedOutgoingIcon from '@material-ui/icons/CallMissedOutgoing';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport AccountCircle from '@material-ui/icons/PermIdentity';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport EmojiTransportationIcon from '@material-ui/icons/EmojiTransportation';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { PUBLIC_PATH } from '../config/API'\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme, alpha } from '@material-ui/core/styles';\r\nimport Initializer from '../store/Initializer'\r\nimport { desencriptarJson } from '../utils/security'\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\n\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport TransformIcon from '@material-ui/icons/Transform';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport { cerrarSesion, obtenerUsuario } from '../utils/API/auth';\r\nimport GroupOutlinedIcon from \"@material-ui/icons/GroupOutlined\";\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AssignmentReturnedIcon from '@material-ui/icons/AssignmentReturned';\r\nimport { useLocation, Switch } from 'react-router-dom';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SpeedDial from './SpeedDial';\r\nimport CallMissedIcon from '@material-ui/icons/CallMissed';\r\nimport logo from '../assets/logo.png'\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport { Badge, Box, Button, Grid } from '@material-ui/core';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport Notifications from './Notification';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    search: {\r\n        height: 45,\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        borderColor: 'rgba(0, 0, 0, 0.12)',\r\n        position: 'relative',\r\n        borderRadius: 10,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            borderColor: 'rgb(30, 136, 229)',\r\n            borderWidth: 1,\r\n            borderStyle: 'solid'\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%', color: 'gray',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit', height: '100%'\r\n    },\r\n    root: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n        overflow: 'hidden'\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(2),\r\n\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n\r\n    },\r\n    drawer: {\r\n        overflow: 'hidden',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        overflowX: 'hidden',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [openCollapse, setOpenCollapse] = React.useState(false);\r\n    const [openCollapse2, setOpenCollapse2] = React.useState(false);\r\n    const [openCollapse3, setOpenCollapse3] = React.useState(false);\r\n\r\n\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [cambio, setCambio] = React.useState(null)\r\n    const [info, setInfo] = React.useState(null)\r\n    const [file, setFile] = React.useState(null)\r\n\r\n    const [names, setNames] = React.useState('')\r\n    const initializer = useContext(Initializer);\r\n    const [notification, setNotification] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (initializer.usuario != null) {\r\n            obtenerUsuario(setInfo, setNotification, initializer)\r\n        }\r\n    }, [initializer.usuario])\r\n    React.useEffect(() => {\r\n        if (info != null) {\r\n            setNames(info.names + \" \" + info.last_names)\r\n        }\r\n    }, [info])\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    function handleOpenSettings() {\r\n        setOpenCollapse(!openCollapse);\r\n    }\r\n    const cerrar = () => {\r\n        initializer.mostrarLoader(true)\r\n        setTimeout(() => {\r\n            initializer.mostrarNotificacion({type:\"error\",message:\"Cesion cerrada con exito\"})\r\n            initializer.mostrarLoader(false)\r\n            localStorage.removeItem(\"is_login\")\r\n            window.location.href='/login';\r\n        }, 1500)\r\n    }\r\n    const comprobador = (val) => {\r\n\r\n        if (location.pathname == val) {\r\n            return { backgroundColor: '#EDE7F6', borderRadius: 7, color: '#6645B3', marginRight: 5, marginLeft: 5 }\r\n        } else {\r\n            if (location.pathname == \"/evaluacion\" && val == \"/evaluaciones\") {\r\n                return { backgroundColor: '#EDE7F6', borderRadius: 7, color: '#6645B3', marginRight: 5, marginLeft: 5 }\r\n\r\n            } else {\r\n                return { borderRadius: 7, marginRight: 5, marginLeft: 5 }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const drawer = (\r\n        <div >\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                <Avatar size=\"\" className={classes.avatar} src={logo}>\r\n\r\n                </Avatar>\r\n                <Typography variant=\"subtitle1\" style={{ fontSize: 15, color: '#929396' }}>\r\n                    Administrador\r\n                </Typography>\r\n                <div style={{\r\n                    width: '150px',\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden', textAlign: 'center',\r\n                    textOverflow: 'ellipsis'\r\n                }}>\r\n                    <Typography variant=\"subtitle1\" style={{ fontSize: 15, color: '#929396' }}>\r\n                        {names}\r\n                    </Typography>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <Divider />\r\n            <div style={{ justifyContent: 'space-between', flexDirection: 'column', display: 'flex' }}>\r\n                <List style={{ padding: 10 }} >\r\n\r\n                    <ListItem button onClick={() => props.history.push('panel')} style={comprobador('/panel')}>\r\n                        <ListItemIcon style={{ color: 'inherit' }}><DashboardIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Dashboard'} />\r\n                    </ListItem>\r\n\r\n\r\n                    <ListItem button onClick={handleOpenSettings} style={comprobador('/inventario')}>\r\n                        <ListItemIcon style={{ color: 'inherit' }}><TuneIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                        <ListItemText primary={'Gestión'} />\r\n                        {openCollapse ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </ListItem>\r\n                    <Collapse in={openCollapse} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding >\r\n                            {/*     <ListItem button className={classes.nested} onClick={()=>props.history.push('/inventario/inventario')} >\r\n                                <ListItemIcon>\r\n                                    <PostAddIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText  primary=\"Inventario\" />\r\n                            </ListItem> */}\r\n\r\n\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/bodegas')} >\r\n                                <ListItemIcon>\r\n                                    {\" \"}\r\n                                    <StoreIcon />{\" \"}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Bodegas\" />\r\n                            </ListItem>\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/items')} >\r\n                                <ListItemIcon>\r\n                                    <PostAddIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Items\" />\r\n                            </ListItem>\r\n\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/proveedores')}>\r\n                                <ListItemIcon>\r\n                                    <EmojiTransportationIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Clientes\" />\r\n                            </ListItem>\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/personal')} style={comprobador('/personal')}>\r\n                                <ListItemIcon ><PeopleOutlineIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                                <ListItemText primary={'Personal'} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>\r\n                    <ListItem button onClick={() => setOpenCollapse2(!openCollapse2)} style={comprobador('/inventario')}>\r\n                        <ListItemIcon style={{ color: 'inherit' }}><ImportExportIcon style={{ color: 'inherit' }} /> </ListItemIcon>\r\n                        <ListItemText primary={'Movimientos'} />\r\n                        {openCollapse2 ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </ListItem>\r\n                    <Collapse in={openCollapse2} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding >\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/compras')} >\r\n                                <ListItemIcon>\r\n                                    <PostAddIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Inventario\" />\r\n                            </ListItem>\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/compras')} >\r\n                                <ListItemIcon>\r\n                                    <CallMissedIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Ingresos\" />\r\n                            </ListItem>\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/movimientos/egresos')} >\r\n                                <ListItemIcon>\r\n                                    <CallMissedOutgoingIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Egresos\" />\r\n                            </ListItem>\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/inventario/transferencias')} >\r\n                                <ListItemIcon>\r\n                                    <TransferWithinAStationIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Transferencias\" />\r\n                            </ListItem>\r\n                            <ListItem button className={classes.nested} onClick={() => props.history.push('/ajustes')}>\r\n                                <ListItemIcon>\r\n                                    <TransformIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Ajuste\" />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Collapse>\r\n\r\n\r\n                    <ListItem button style={comprobador('/inventario/tareas')} onClick={() => props.history.push('/inventario/tareas')}>\r\n                        <ListItemIcon style={{ color: 'inherit' }}><AssignmentIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Tareas'} />\r\n                    </ListItem>\r\n\r\n                    <ListItem button style={comprobador('/inventario/pedidos')} onClick={() => props.history.push('/inventario/pedidos')}>\r\n                        <ListItemIcon style={{ color: 'inherit' }}><AssignmentReturnedIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Pedidos'} />\r\n                    </ListItem>\r\n                    <ListItem button style={comprobador('/reportes')}>\r\n                        <ListItemIcon style={{ color: 'inherit' }}><PrintIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Reportes'} />\r\n                    </ListItem>\r\n\r\n                </List>\r\n\r\n                <div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem button onClick={() => props.history.push('ajustes')} style={comprobador('/ajustes')} >\r\n                            <ListItemIcon style={{ color: 'inherit' }}><SettingsIcon /> </ListItemIcon>\r\n                            <ListItemText primary={'Configuración'} />\r\n                        </ListItem>\r\n                        <ListItem button onClick={cerrar}>\r\n                            <ListItemIcon><ExitToAppIcon /> </ListItemIcon>\r\n                            <ListItemText primary={'Salir'} />\r\n                        </ListItem>\r\n\r\n                    </List>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n    console.log(history)\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n\r\n            {\r\n                // initializer.usuario != null ?\r\n                history.location.pathname != \"/bienvenida\" ?\r\n\r\n                    <React.Fragment>\r\n                        <AppBar position=\"fixed\">\r\n                            <Toolbar>\r\n\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    edge=\"start\"\r\n\r\n\r\n                                >\r\n                                    <HomeIcon />\r\n                                </IconButton>\r\n                                <Typography >   Administrador</Typography>\r\n\r\n                                <div className={classes.grow} />\r\n\r\n\r\n                                <Typography style={{marginRight:10}} >   BoutiqueKZ</Typography>\r\n                                {\r\n                                    localStorage.getItem('is_login') != null&&(\r\n                                        <IconButton\r\n                                        color=\"inherit\"\r\n                                        aria-label=\"open drawer\"\r\n                                        edge=\"start\"\r\n                                        onClick={cerrar}\r\n                               \r\n                                    >\r\n                                        <ExitToAppIcon />\r\n                                    </IconButton>\r\n                                    )\r\n                                }\r\n                               \r\n                            </Toolbar>\r\n                        </AppBar>\r\n\r\n                    </React.Fragment>\r\n                    :\r\n                    null\r\n            }\r\n            <main className={classes.content} style={{ overflow: 'auto', padding: 15 }} >\r\n\r\n\r\n                <div className={classes.toolbar} />\r\n                {props.children}\r\n                {\r\n                    initializer.usuario != null ?\r\n                        <SpeedDial />\r\n                        : null\r\n                }\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n  \r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { Component, useState, useContext } from 'react';\r\nimport '../style/AppBar.css'\r\nimport Menu from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Notifications from '@material-ui/icons/Notifications';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ArrowDropDownCircle from '@material-ui/icons/ArrowDropDownCircle';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Drawer from './Drawer2';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ModalLogin from './ModalLogin'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { desencriptarJson } from '../utils/security'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Initializer from '../store/Initializer'\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n\r\n\r\n\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nconst AppBarC = (props) => {\r\n    const initializer = useContext(Initializer);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n    let history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n    const handleClickAway = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <HideOnScroll {...props}>\r\n\r\n            <AppBar color=\"primary\" position=\"sticky\">\r\n                <ClickAwayListener onClickAway={handleClickAway}>\r\n\r\n                    <Toolbar>\r\n                        <Grid item container direction=\"row\" alignItems=\"center\" justify=\"flex-start\" xs={7} >\r\n                            <Drawer {...props} />\r\n                            <Button disableRipple style={{display:'flex',justifyContent:'center',alignItems:'center'}}  color=\"primary\" variant=\"contained\" size=\"small\" onClick={() => window.location.href = './dashboard'}><img src={require('../assets/isotipoAmbiensa.png')} className=\"foto\" style={{ borderRadius: 8, height: '30px', width: '30px' }} /></Button>\r\n                            \r\n                            <div className=\"title\">\r\n                                <Box className=\"vertical-line\" ml={1} mr={1} />\r\n                                <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                                    Gestor comercial\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item container direction=\"row\" alignItems=\"center\" justify=\"flex-end\" xs={5} >\r\n\r\n                            {/*     <IconButton aria-label=\"delete\" color=\"inherit\">\r\n                                <Badge color=\"secondary\" badgeContent={1}>\r\n                                    <Notifications fontSize=\"inherit\" />\r\n                                </Badge>\r\n                            </IconButton> */}\r\n                            {\r\n                                !fullScreen&&\r\n                                initializer.usuario != null ? JSON.parse(desencriptarJson(initializer.usuario)).user.names+\" \"+JSON.parse(desencriptarJson(initializer.usuario)).user.last_names : \"\"\r\n                            }\r\n                       \r\n                            <IconButton aria-label=\"delete\" color=\"inherit\" size=\"medium\" onClick={() => {\r\n                                setShow(!show)\r\n                            }} ><ArrowDropDownCircle /></IconButton>\r\n                            <Fade in={show}>\r\n                                <Paper>\r\n                                    <ModalLogin changeTheme={props.changeTheme} show={show} {...props} />\r\n                                </Paper>\r\n\r\n                            </Fade>\r\n\r\n                        </Grid>\r\n                    </Toolbar>\r\n\r\n\r\n                </ClickAwayListener>\r\n            </AppBar>\r\n\r\n        </HideOnScroll>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AppBarC","export default __webpack_public_path__ + \"static/media/login.5ac0cdfa.png\";","export default __webpack_public_path__ + \"static/media/register.eb451a71.png\";","import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { registrar } from '../../utils/API/auth';\r\nimport Initializer from '../../store/Initializer'\r\nexport default function Iniciar(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre,setNombre]=React.useState(\"\")\r\n    const [apellido,setApellido]=React.useState(\"\")\r\n\r\n    const [correo,setCorreo]=React.useState(\"\")\r\n    const [clave,setClave]=React.useState(\"\")\r\n    const entrar=()=>{\r\n        registrar({names:nombre,last_names:apellido,email:correo,password:clave},props.setTab,initializer)\r\n    }\r\n    return (\r\n        <form className={props.classes.form} noValidate>\r\n               <TextField\r\n            variant=\"outlined\"\r\n            style={{marginBottom:10,marginTop:10}}\r\n            required\r\n            style={{marginBottom:10}}\r\n            id=\"email\"\r\n            size=\"small\"\r\n            label=\"Nombres\"\r\n            name=\"email\"\r\n            value={nombre}\r\n            onChange={(e)=>setNombre(e.target.value)}\r\n            \r\n        />\r\n           <TextField\r\n            variant=\"outlined\"\r\n         \r\n            required\r\n            style={{marginBottom:10}}\r\n            size=\"small\"\r\n            id=\"email\"\r\n            label=\"Apellidos\"\r\n            name=\"email\"\r\n            value={apellido}\r\n            onChange={(e)=>setApellido(e.target.value)}\r\n          \r\n        />\r\n        <TextField\r\n            variant=\"outlined\"\r\n            style={{marginBottom:10}}\r\n            size=\"small\"\r\n            required\r\n\r\n            id=\"email\"\r\n            label=\"Correo electrónico\"\r\n            name=\"email\"\r\n            value={correo}\r\n            onChange={(e)=>setCorreo(e.target.value)}\r\n        />\r\n        <TextField\r\n            variant=\"outlined\"\r\n          \r\n            size=\"small\"\r\n            required\r\n            value={clave}\r\n            onChange={(e)=>setClave(e.target.value)}\r\n            name=\"password\"\r\n            label=\"Contraseña\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n     \r\n        />\r\n\r\n        <Button\r\n\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={entrar}\r\n            className={props.classes.submit}\r\n        >\r\n            Registrate ahora\r\n        </Button>\r\n\r\n    </form>\r\n\r\n    )\r\n}\r\n","\r\nimport { encriptarJson, desencriptarJson } from \"../security\";\r\nimport {ENTRYPOINT} from '../../config/API'\r\nconst axios = require(\"axios\");\r\n\r\nexport const obtenerTodos = (filtros,setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url =   \"https://api.chec.io/v1/orders\";\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n        \"X-Authorization\": \"sk_387173323740d627b286ab5242a4411624523346ae9a2\",\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n\r\n        let data = response.data;\r\n        if(filtros!=null){\r\n            //PROCESS DATA\r\n             data = response.data.filter((e)=>{\r\n                let desde = Math.floor(filtros.desde.getTime() / 1000)\r\n                let hasta = Math.floor(filtros.hasta.getTime() / 1000)\r\n                return (e.created>=desde&&e.created<=hasta)\r\n            })\r\n        }\r\n        let monto=0\r\n        data.map((e)=>{\r\n          monto +=  e.order_value.raw\r\n        })\r\n        let kpi1 = {\r\n            valor: monto,\r\n            ventas: data.length\r\n        }\r\n       setData(kpi1);\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const obtenerNúmeroProductos = (filtros,setData,setData2,setData3, setData4,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url =   \"https://api.chec.io/v1/products\";\r\n    let setting = {\r\n      method: \"GET\",\r\n      params:{\r\n          id: \"ord_eN1ql9K44Yoz3y\"\r\n      },\r\n      url: url,\r\n      headers: {\r\n          \"X-Authorization\": \"sk_387173323740d627b286ab5242a4411624523346ae9a2\",\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    mostrarLoader(true);\r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n          \r\n            let data = response.data;\r\n            if(filtros!=null){\r\n                //PROCESS DATA\r\n                 data = response.data.filter((e)=>{\r\n                    let desde = Math.floor(filtros.desde.getTime() / 1000)\r\n                    let hasta = Math.floor(filtros.hasta.getTime() / 1000)\r\n                    return (e.created>=desde&&e.created<=hasta)\r\n                })\r\n            }\r\n\r\n            let values=[]\r\n            let labels=[]\r\n            let lastProducts=[]\r\n            let todos=[]\r\n            data.map((e,i)=>{\r\n                    labels.push(e.name)\r\n                    values.push(e.inventory.available)\r\n                    if(i<5){\r\n                        lastProducts.push({name:e.name,stock:e.inventory.available,price:e.price.raw,image:e.image?.url})\r\n                    }\r\n                    todos.push({name:e.name,stock:e.inventory.available,price:e.price.raw,image:e.image?.url})\r\n\r\n            });\r\n            setData(data.length);\r\n            setData2({values:values,labels})\r\n            setData3(lastProducts)\r\n            setData4(todos)\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\n  export const obtenerNúmeroCategorías = (filtros,setData, store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url =    \"https://api.chec.io/v1/categories\";\r\n    let setting = {\r\n      method: \"GET\",\r\n      params:{\r\n          id: \"ord_eN1ql9K44Yoz3y\"\r\n      },\r\n      url: url,\r\n      headers: {\r\n          \"X-Authorization\": \"sk_387173323740d627b286ab5242a4411624523346ae9a2\",\r\n          \"Accept\": \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    mostrarLoader(true);\r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n            let data = response.data;\r\n            if(filtros!=null){\r\n                //PROCESS DATA\r\n                 data = response.data.filter((e)=>{\r\n                    let desde = Math.floor(filtros.desde.getTime() / 1000)\r\n                    let hasta = Math.floor(filtros.hasta.getTime() / 1000)\r\n                    return (e.created>=desde&&e.created<=hasta)\r\n                })\r\n            }\r\n\r\n         setData(data.length);\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const obtenerTodosTabla = (setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"countries/all\";\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData({data:response,backup:response});\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const editarPais = (data,atras, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    const {\r\n\r\n        pais_id,name\r\n    } = data;\r\n    var raw = {\r\n   \r\n   \r\n      pais_id:pais_id,\r\n      name:name,\r\n    \r\n  \r\n    };\r\n    let url =  ENTRYPOINT+\"countries/edit\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: raw,\r\n      body: raw,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          atras()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\n   export const registerCountry = (data, atras,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    const {\r\n\r\n        pais_id,name\r\n    } = data;\r\n    var raw = {\r\n   \r\n   \r\n      pais_id:pais_id,\r\n      name:name,\r\n    \r\n  \r\n    };\r\n    let url = ENTRYPOINT+\"countrie/register\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: raw,\r\n      body: raw,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          atras()\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n  export const eliminarPais = (country_id,store,cargarData) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"countrie/delete\";\r\n    var raw = {\r\n        country_id:country_id,\r\n    };\r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      data: raw,\r\n      body: raw,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n          cargarData()\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\n  ","import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Initializer from '../../store/Initializer'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { iniciarSesion } from '../../utils/API/auth';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport logo from '../../assets/logo.png'\r\nimport { obtenerTodos } from '../../utils/API/commerce';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Iniciar(props) {\r\n  const initializer = React.useContext(Initializer);\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = React.useState(false)\r\n  const [correo, setCorreo] = React.useState(\"\")\r\n  const [clave, setClave] = React.useState(\"\")\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('is_login') != null) {\r\n      window.location.href=\"/panel\"\r\n    }\r\n  }, [])\r\n  const entrar = () => {\r\n    //iniciarSesion(correo, clave, initializer)\r\n    initializer.mostrarLoader(true)\r\n    setTimeout(() => {\r\n      if(correo==\"boutique.kz.2022@gmail.com\"&&clave==\"boutique2022\"){\r\n        initializer.mostrarNotificacion({type:\"success\",message:\"Inicio de sexión exitoso\"})\r\n        initializer.mostrarLoader(false)\r\n        localStorage.setItem(\"is_login\", true)\r\n        window.location.href='/panel';\r\n      }else{\r\n        initializer.mostrarNotificacion({type:\"error\",message:\"Credenciales incorrectas\"})\r\n        initializer.mostrarLoader(false)\r\n      }\r\n      \r\n    }, 1500)\r\n  }\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <form noValidate>\r\n      <div className={classes.paper}>\r\n        <Avatar size=\"\" className={classes.avatar}>\r\n\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Iniciar sesión\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            margin=\"normal\"\r\n\r\n            id=\"email\"\r\n            label=\"Correo electrónico\"\r\n            name=\"email\"\r\n            value={correo}\r\n            onChange={(e) => setCorreo(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\" style={{ width: '100%', marginTop: 10 }}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Contraseña</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={clave}\r\n              onChange={(e) => {\r\n                setClave(e.target.value)\r\n              }}\r\n              onKeyDown={(e)=>{\r\n                if (e.key === \"Enter\") {\r\n                  entrar()\r\n                }\r\n                }}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n          </FormControl>\r\n        \r\n          <Button\r\n\r\n            onClick={entrar}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Iniciar Sesión Ahora\r\n          </Button>\r\n   \r\n        </form>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </form>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport splashL from '../../assets/login.png'\r\nimport splashR from '../../assets/register.png'\r\n\r\nimport Register from './Register'\r\nimport Iniciar from './Iniciar'\r\nimport { useMediaQuery, useTheme } from '@material-ui/core';\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\">\r\n          BTKZ\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n    const dato = props.location.state;\r\n    const theme = useTheme();\r\n\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const classes = useStyles();\r\n    const [tab,setTab]=React.useState(0)\r\n\r\n\r\n    React.useEffect(()=>{\r\n        console.log(dato)\r\n        if(dato!=undefined){\r\n            if(dato.hasOwnProperty('register')){\r\n                setTab(1)\r\n            }\r\n        }\r\n        \r\n    },[dato])\r\n    return (\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {\r\n                tab==0?\r\n                <Iniciar />\r\n                :\r\n                <Register />\r\n\r\n            }\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n\r\n    );\r\n}\r\n","\r\nimport React, { Component,forwardRef }  from 'react';\r\n\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport Edit from '@material-ui/icons/EditOutlined';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\r\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExportOutlined';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport FormatListNumberedRtlIcon from '@material-ui/icons/FormatListNumberedRtl';\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport PhoneInTalkIcon from '@material-ui/icons/PhoneInTalk';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nexport const TableIcons = {\r\n    \r\n    RefreshIcon: forwardRef((props, ref) => <RefreshIcon {...props} ref={ref} />),\r\n    Add: forwardRef((props, ref) => <AddBox  {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    LibraryAddCheckIcon: forwardRef((props, ref) => <LibraryAddCheckIcon {...props} ref={ref} />),\r\n    IndeterminateCheckBoxIcon: forwardRef((props, ref) => <IndeterminateCheckBoxIcon {...props} ref={ref} />),\r\n    ImportExportIcon: forwardRef((props, ref) => <ImportExportIcon {...props} ref={ref} />),\r\n    VisibilityOutlinedIcon: forwardRef((props, ref) => <VisibilityOutlinedIcon {...props} ref={ref} />),\r\n    MailOutlineIcon: forwardRef((props, ref) => <MailOutlineIcon {...props} ref={ref} />),\r\n    AssignmentIndIcon: forwardRef((props, ref) => <AssignmentIndIcon {...props} ref={ref} />),\r\n    TelegramIcon: forwardRef((props, ref) => <TelegramIcon {...props} ref={ref} />),\r\n    FormatListNumberedRtlIcon: forwardRef((props, ref) => <FormatListNumberedRtlIcon {...props} ref={ref} />),\r\n    PaymentIcon: forwardRef((props, ref) => <PaymentIcon {...props} ref={ref} />),\r\n    GetAppIcon: forwardRef((props, ref) => <GetAppIcon {...props} ref={ref} />),\r\n    AutorenewIcon: forwardRef((props, ref) => <AutorenewIcon {...props} ref={ref} />),\r\n    PhoneInTalkIcon:forwardRef((props, ref) => <PhoneInTalkIcon {...props} ref={ref} />),\r\n    EventIcon:forwardRef((props, ref) => <EventIcon {...props} ref={ref} />),\r\n    AccountCircleIcon:forwardRef((props, ref) => <AccountCircleIcon {...props} ref={ref} />),\r\n    SaveIcon:forwardRef((props, ref) => <SaveIcon {...props} ref={ref} />)\r\n\r\n    \r\n    \r\n  };\r\nexport const LocalizationTable = {\r\n    pagination: {\r\n        labelDisplayedRows: '{from}-{to} of {count}'\r\n    },\r\n    toolbar: {\r\n        nRowsSelected: '{0} fila(s) seleccionada',\r\n        searchPlaceholder:'Buscar'\r\n    },\r\n    pagination:{\r\n        labelRowsSelect: 'filas',\r\n    } ,\r\n    header: {\r\n        actions: ''\r\n    },\r\n    body: {\r\n        emptyDataSourceMessage: 'No hay datos por mostrar',\r\n        filterRow: {\r\n            filterTooltip: 'Filter'\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeAccent = (str) => {\r\n\r\n    return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n  }","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\n\r\n\r\nexport const subirFoto = (id,data,store,carga) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  var resp = new FormData()\r\nfor ( var key in data ) {\r\n  resp.append(key, data[key]);\r\n}\r\n  let url = ENTRYPOINT+\"products/upload_image/\"+id;\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       carga()\r\n      } else {\r\n      }\r\n    })\r\n    .catch((error) => {\r\n\r\n    });\r\n}\r\n\r\n\r\nexport const editarSistema = (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"products/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarSistema = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"products/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarSistema = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    var resp = new FormData()\r\n    for ( var key in data ) {\r\n      resp.append(key, data[key]);\r\n    }\r\n    let url = ENTRYPOINT+\"products\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: resp,\r\n      body: resp,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n\r\n  \r\n  export const obtenerInventory = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"inventories\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerTodosParam = (params,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"products\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    params,\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"products\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerSistemaEvaluaciones = (setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"systems_evaluations\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setLabels(response.data.system)\r\n      setValues(response.data.count)\r\n\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerPorBodega = (id,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"products_by_warehouse/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerPorCliente = (id,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"products_by_client/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerPropios = (setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"products_own\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { editarSistema, registrarSistema } from '../../../utils/API/sistemas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n\r\n    const [nombre, setNombre] = React.useState(\"\")\r\n    const [url, setUrl] = React.useState(\"\")\r\n    const [descripcion, setDescripcion] = React.useState(\"\")\r\n    React.useEffect(()=>{\r\n        if(props.sistema!=null){\r\n            setNombre(props.sistema.name)\r\n            setUrl(props.sistema.url)\r\n            setDescripcion(props.sistema.description)\r\n        }\r\n    },[props.sistema])\r\n    const guardar=()=>{\r\n        if(props.sistema==null){\r\n            registrarSistema({name:nombre,url:url,description:descripcion},initializer)\r\n            limpiar()\r\n        }else{\r\n            editarSistema(props.sistema.id,{name:nombre,url:url,description:descripcion},initializer)\r\n            limpiar()\r\n\r\n        }\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    const limpiar=()=>{\r\n        setNombre(\"\")\r\n        setUrl(\"\")\r\n        setDescripcion(\"\")\r\n        props.setSelected(null)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => {\r\n                props.setOpen(false)\r\n                limpiar()\r\n            }}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Sistemas</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                   {props.sistema!=null?\"Formulario de edición de sistema\": \"Formulario de creación de sistema\"}\r\n                </DialogContentText>\r\n                <Grid container>\r\n                    <Grid item xs={12}>    <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ marginBottom: 10,width:'100%' }}\r\n                        size=\"small\"\r\n                        label=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>   <TextField\r\n                        variant=\"outlined\"\r\n                        style={{ marginBottom: 10,width:'100%' }}\r\n                        size=\"small\"\r\n                        label=\"Url\"\r\n                        value={url}\r\n                        onChange={(e) => setUrl(e.target.value)}\r\n\r\n                    /></Grid>\r\n                    <Grid item xs={12}>  <TextField\r\n                        variant=\"outlined\"\r\n\r\n                        style={{ marginBottom: 10,width:'100%' }}\r\n                   \r\n                        label=\"Descripción\"\r\n\r\n                        value={descripcion}\r\n                        onChange={(e) => setDescripcion(e.target.value)}\r\n\r\n                    /></Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Guardar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Initializer from '../../../store/Initializer'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Grid } from '@material-ui/core';\r\nimport { eliminarSistema, registrarSistema } from '../../../utils/API/sistemas';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nexport default function Crear(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const guardar=()=>{\r\n        eliminarSistema(props.sistema.id,initializer)\r\n        props.setOpen(false)\r\n        props.carga()\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => props.setOpen(false)}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Sistemas</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    ¿Está seguro que desea eliminar el registro?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => props.setOpen(false)} color=\"default\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={guardar}>\r\n                    Eliminar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import { encriptarJson, desencriptarJson } from \"../security\";\r\nimport {ENTRYPOINT} from '../../config/API'\r\nconst axios = require(\"axios\");\r\n\r\nexport const crearCodigo = (data, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n\r\n  let url = ENTRYPOINT+\"email/create_code\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n      \r\n      } else {\r\n       \r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n    \r\n    });\r\n};\r\nexport const estaVerificado = (data, setData,store) => {\r\n  const { mostrarNotificacion, mostrarLoader } = store;\r\n \r\n\r\n  let url = ENTRYPOINT+\"user/is_verified\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       setData(response.verified)\r\n        mostrarLoader(false);\r\n      \r\n      } else {\r\n        setData(response.verified)\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n      setData(false)\r\n    \r\n    });\r\n};\r\n\r\nexport const verificarCodigo = (data,setSuccess, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n\r\n  let url = ENTRYPOINT+\"email/verify_code\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setSuccess(true)\r\n        mostrarLoader(false);\r\n      \r\n      } else {\r\n        setSuccess(false)\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n    \r\n    });\r\n};\r\nexport const editarIngresos = (data, store,changeStep) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n\r\n  let url = ENTRYPOINT+\"client/edit_income\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n        changeStep()  \r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const enviarRegalo = (data,setChange) => {\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"client/send_reward\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  },\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       setChange(1)\r\n      } else {\r\n        setChange(1)\r\n      }\r\n    })\r\n    .catch((error) => {\r\n     \r\n    });\r\n};\r\nexport const cambiarInteres = (data,store) => {\r\n\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\n  let url = ENTRYPOINT+\"client/change_status\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\", Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: \"Error de red\" });\r\n    });\r\n};\r\n\r\nexport const cambiarRisk = (data,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"client/change_risk\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  },\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n       \r\n    });\r\n};\r\n\r\nexport const enviarCotizacion = (data,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"cliente/send_cotization\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\", Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n\r\n\r\n  mostrarLoader(true)\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n        \r\n      } else {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n    });\r\n};\r\nexport const cotizar = (data,store,setLink) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"cliente/cotizar\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\", Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n\r\nmostrarLoader(true)\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n      //  mostrarNotificacion({ type: \"info\", message: response.message });\r\n        setLink(response.url_cotiza)\r\n      } else {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n       \r\n    });\r\n};\r\n\r\nexport const obtenerValorCotizaciones = (data,setData) => {\r\n\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"client/get_cotization\";\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    params:data,\r\n    headers: { Accept: \"application/json\"},\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      setData(response.cantidad_cotizaciones)\r\n      if(response.hasOwnProperty('cantidad_cotizaciones')){\r\n        setData(response.cantidad_cotizaciones);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n\r\n       \r\n    });\r\n};\r\nexport const obtenerCotizacion = (cedula_interesado,store,setLink) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"cliente/get_cotizacion?cedula_interesado=\"+cedula_interesado;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n\r\n    headers: { Accept: \"application/json\", Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n\r\nmostrarLoader(true)\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message:response.message });\r\n        setLink(response.url_PDFcotizacion)\r\n      } else {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n       \r\n    });\r\n};\r\n\r\nexport const cambiarUafe = (data,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"client/change_uafe\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",  },\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n       \r\n    });\r\n};\r\n\r\nexport const precalificar = (data,store,recargar) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n\r\n  let url = ENTRYPOINT+\"client/precalificate\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\", Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n\r\nmostrarLoader(true)\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n        recargar();\r\n      } else {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n       \r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nexport const obtenerFiles = (client_id,setData) => {\r\n\r\n\r\n  let url = ENTRYPOINT+\"client/files?client_id=\"+client_id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response.data);\r\n        \r\n      } else {\r\n        \r\n      }\r\n    })\r\n    .catch((error) => {\r\n     \r\n    });\r\n};\r\nexport const obtenerReward = (client_id,setData) => {\r\n\r\n\r\n  let url = ENTRYPOINT+\"client/has_reward?client_id=\"+client_id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response.has_reward);\r\n        \r\n      } else {\r\n        \r\n      }\r\n    })\r\n    .catch((error) => {\r\n     \r\n    });\r\n};\r\n\r\n\r\nexport const getClientWithLead = (setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"getClientWithLead\";\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response.data);\r\n      \r\n      } else {\r\n      \r\n      }\r\n    })\r\n    .catch((error) => {\r\n    \r\n    });\r\n};\r\nexport const obtenerLogs = (setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"sgi/logs\";\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response.data);\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const obtenerTodos = (tipo,setData, store,page,perPage,setTotalRows,search,status,setContadorColor) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"clients/all?status=\"+status+\"&q=\"+search+\"&page=\"+(page+1)+\"&perPage=\"+perPage+\"&tipo=\"+tipo;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response.data);\r\n        mostrarLoader(false);\r\n        setTotalRows(response.totalRows)\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n\r\n        setContadorColor(response.colorCount)\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const obtenerTodosTabla = (tipo,setData, store,page,perPage,setTotalRows,search,status,setContadorColor,filtro) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\n  let params = \"\"\r\n  if (filtro.length != 0) {\r\n    filtro.map((e) => {\r\n      params += \"&\" + e.tipo + \"=\" + e.valor\r\n    })\r\n  }\r\n  let url = ENTRYPOINT+\"clients/all?status=\"+status+\"&q=\"+search+\"&page=\"+(page+1)+\"&perPage=\"+perPage+\"&tipo=\"+tipo+\" \"+params;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response.data);\r\n        \r\n       \r\n\r\n        let newArray=[]\r\n        response.data.map((e,i)=>{\r\n          newArray.push({ ...e,numero:(i+1), position_name: (e.position != null ? (e.position != \"Invalido\" ? e.position : \"Documentos no válidos\") : \"Procesando\"), inicio: new Date(e.modificado).toLocaleString(),  city_name: e.city,  dependencia: (e.dependencia != null ? (e.dependencia == '1' ? 'SI' : 'NO') : \"N/A\"), asesor_name: (e.asesor != null ? e.asesor.nombres + \" \" + e.asesor.apellidos : \"Sin asignar\"), estado: e.estado_civil })\r\n        })\r\n\r\n        setData(newArray)\r\n        mostrarLoader(false);\r\n        setTotalRows(response.totalRows)\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n\r\n        setContadorColor(response.colorCount)\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const obtenerTodosNoAprobados = (tipo,setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"clients/all?tipo=\"+tipo;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        let datos=[]\r\n        response.data.map((e)=> {\r\n          if(e.position!=\"Aprobado\"){\r\n            datos.push({...e})\r\n          }\r\n        \r\n        })\r\n        setData(datos);\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\n\r\n\r\nexport const obtenerClientePrecalificador = (id,setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"clients/precalificator_data?client_id=\"+id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        setData(response);\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\n\r\nexport const editarCliente = (data, store,changeStep,setValidation,setHasValidation) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  const {\r\n    spouse_id,monthly_iva,\r\n    client_id,monthly_ivaS,\r\n    dni,\r\n    names,\r\n    last_names,\r\n    born_date,\r\n    cellphone,\r\n    dependencia,\r\n    landline,\r\n    address,civil,\r\n    neighborhood,civil_name,\r\n    city_id,\r\n    recomendation_id,\r\n    work_place,\r\n    month_income,\r\n    spouse_email,\r\n    spouse_dni,\r\n    spouse_names,\r\n    spouse_last_names,\r\n    spouse_born_date,\r\n    spouse_cellphone,\r\n    spouse_landline,\r\n    referred_dni,\r\n    referred_names,\r\n    referred_proyect\r\n    ,town,block,citadel,\r\n    \r\n  } = data;\r\n  var raw = {\r\n    ...data,\r\n    spouse_id:spouse_id,\r\n    client_id:client_id,\r\n    dni:dni,monthly_ivaS:monthly_ivaS,\r\n    monthly_iva:monthly_iva,\r\n    names:names,dependence:dependencia\r\n    ,town,block,citadel,\r\n    referred_dni,\r\n    referred_names,\r\n    referred_proyect,civil,\r\n    civil_name:civil_name,\r\n    last_names:last_names,\r\n    born_date:born_date,\r\n    cellphone:cellphone,\r\n    landline:landline,\r\n    address:address,\r\n    neighborhood:neighborhood,\r\n    city_id:city_id,\r\n    recomendation_id:recomendation_id,\r\n    work_place:work_place,\r\n    month_income:month_income,\r\n\r\n    spouse_email,\r\n    spouse_dni:spouse_dni,\r\n    spouse_names:spouse_names,\r\n    spouse_last_names:spouse_last_names,\r\n    spouse_born_date:spouse_born_date,\r\n    spouse_cellphone:spouse_cellphone,\r\n    spouse_landline:spouse_landline\r\n  };\r\n  let url = ENTRYPOINT+\"client/editar\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: raw,\r\n    body: raw,\r\n    headers: { Accept: \"application/json\" },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       if(changeStep!=null){\r\n        changeStep()\r\n       }\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        if(response.fields!=null){\r\n          setValidation(response.fields)\r\n          setHasValidation(true)\r\n        }\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const registrarCliente = (data, store,changeStep,setValidation,setHasValidation) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  const {\r\n    dni,\r\n    names,\r\n    last_names,\r\n    born_date,\r\n    cellphone,\r\n    dependencia,\r\n    landline,\r\n    address,\r\n    neighborhood,town,block,citadel,\r\n    email,\r\n    authorization,\r\n    civil_name,\r\n    civil,\r\n    position,\r\n    city_id,\r\n    recomendation_id,\r\n    work_place,\r\n    month_income,\r\n    spouse_dni,\r\n    spouse_names,\r\n    village_id,\r\n    spouse_email,\r\n    spouse_last_names,\r\n    spouse_born_date,\r\n    spouse_cellphone,\r\n    spouse_landline,\r\n    referred_dni,\r\n    referred_names,\r\n    referred_proyect,\r\n\r\n    email_asesor,\r\n\r\n    other_income,\r\n    rent_expenses,\r\n    food_expenses,\r\n    clothing_expenses,\r\n    basic_expenses,\r\n    education_expenses,\r\n    transport_expenses,\r\n\r\n  } = data;\r\n  var raw = {\r\n    email_asesor,\r\n\r\n    other_income,\r\n    rent_expenses,\r\n    food_expenses,\r\n    clothing_expenses,\r\n    basic_expenses,\r\n    education_expenses,\r\n    transport_expenses,\r\n\r\n    email:email,\r\n    authorization:authorization,\r\n    dni:dni,town:town,block:block,citadel:citadel,\r\n    civil:civil,\r\n    referred_dni,\r\n    referred_names,\r\n    referred_proyect,\r\n    civil_name:civil_name,\r\n    position:position,\r\n    names:names,\r\n    village_id:village_id,\r\n    dependence:dependencia,\r\n    last_names:last_names,\r\n    born_date:born_date,\r\n    cellphone:cellphone,\r\n    landline:landline,\r\n    address:address,\r\n    neighborhood:neighborhood,\r\n    city_id:city_id,\r\n    recomendation_id:recomendation_id,\r\n    work_place:work_place,\r\n    month_income:month_income,\r\n    spouse_dni:spouse_dni,\r\n    spouse_names:spouse_names,\r\n    spouse_email:spouse_email,\r\n    spouse_last_names:spouse_last_names,\r\n    spouse_born_date:spouse_born_date,\r\n    spouse_cellphone:spouse_cellphone,\r\n    spouse_landline:spouse_landline\r\n  };\r\n  let url = ENTRYPOINT+\"client/register\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: raw,\r\n    body: raw,\r\n    headers: { Accept: \"application/json\" },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        if(changeStep!=null){\r\n          changeStep(\"2\",response.id)\r\n          \r\n         \r\n        }\r\n       \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        if(response.fields!=null){\r\n          setValidation(response.fields)\r\n          setHasValidation(true)\r\n        }\r\n        \r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const registrarClienteAuth = (data,atras, store,setValidation,setHasValidation,subirConyuge) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  const {\r\n    dni,\r\n    names,\r\n    last_names,monthly_ivaS,\r\n    born_date,\r\n    cellphone,\r\n    dependencia,\r\n    landline,\r\n    address,\r\n    neighborhood,town,block,citadel,\r\n    email,\r\n    authorization,\r\n    monthly_iva,\r\n    civil_name,\r\n    civil,\r\n    position,\r\n    city_id,\r\n    recomendation_id,\r\n    work_place,\r\n    month_income,\r\n    spouse_dni,\r\n    spouse_names,\r\n    village_id,\r\n    spouse_email,\r\n    spouse_last_names,\r\n    spouse_born_date,\r\n    spouse_cellphone,\r\n    spouse_landline,\r\n    referred_dni,\r\n    referred_names,\r\n    referred_proyect\r\n\r\n  } = data;\r\n  var raw = {\r\n    ...data,\r\n    email:email,\r\n    authorization:authorization,\r\n    dni:dni,town:town,block:block,citadel:citadel,\r\n    civil:civil,monthly_ivaS:monthly_ivaS,\r\n    referred_dni,\r\n    monthly_iva:monthly_iva,\r\n    referred_names,\r\n    referred_proyect,\r\n    civil_name:civil_name,\r\n    position:position,\r\n    names:names,\r\n    village_id:village_id,\r\n    dependence:dependencia,\r\n    last_names:last_names,\r\n    born_date:born_date,\r\n    cellphone:cellphone,\r\n    landline:landline,\r\n    address:address,\r\n    neighborhood:neighborhood,\r\n    city_id:city_id,\r\n    recomendation_id:recomendation_id,\r\n    work_place:work_place,\r\n    month_income:month_income,\r\n    spouse_dni:spouse_dni,\r\n    spouse_names:spouse_names,\r\n    spouse_email:spouse_email,\r\n    spouse_last_names:spouse_last_names,\r\n    spouse_born_date:spouse_born_date,\r\n    spouse_cellphone:spouse_cellphone,\r\n    spouse_landline:spouse_landline\r\n  };\r\n  let url = ENTRYPOINT+\"client/register_auth\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: raw,\r\n    body: raw,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n      \r\n       \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n        subirConyuge()\r\n        atras()\r\n      } else {\r\n        if(response.fields!=null){\r\n          setValidation(response.fields)\r\n          setHasValidation(true)\r\n        }\r\n        \r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const obtenerDataCliente = (dni,id,setData, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"client/get_by_id?dni=\"+dni+\"&client_id=\"+id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n \r\n        if(response.exist!=false){\r\n          setData({client:{...response.client_data,email:response.email,province:response.province},spouse:response.spouse_data});\r\n        }else{\r\n          setData(null)\r\n        }\r\n     \r\n        mostrarLoader(false);\r\n       \r\n      } else {\r\n       \r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n     \r\n    });\r\n};\r\nexport const obtenerDataClientePaso1 = (dni,id,setData, store,obtenerDataSGI) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"client/get_by_id?dni=\"+dni+\"&client_id=\"+id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n   \r\n    \r\n          setData({client:{...response.client_data,email:response.email,province:response.province},spouse:response.spouse_data});\r\n\r\n       \r\n        mostrarLoader(false);\r\n        if(response.exist==false){\r\n          obtenerDataSGI(dni)\r\n\r\n        }\r\n       \r\n       \r\n      } else {\r\n       \r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n     \r\n    });\r\n};\r\nexport const obtenerDataClienteSgi = (dni,setData,setSeller, store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"sgi/get_data?dni=\"+dni;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n        let arrayNames = response.nombres_apellidos.trim().split(\" \")\r\n        let nombres  =arrayNames.splice(0,(arrayNames.length/2)).join(\" \");\r\n        let apellidos = arrayNames.splice(0,arrayNames.length).join(\" \")\r\n    \r\n        let data={\r\n          dni:response.cedula,\r\n          names:nombres,\r\n          last_names:apellidos,\r\n          born_date:response.fecha_nacimiento,\r\n          email:response.email,\r\n          cellphone:response.celular,\r\n          landline:response.telefono,\r\n          civil:response.estado_civil==2?(response.estado_civil==3?5:1):6,\r\n          address: response.direccion,\r\n          citadel:response.referencia_domicilio,\r\n          city_id:response.ciudad==75?93:response.ciudad,\r\n          recomendation_id:getActivacionId(response.medio),\r\n          email_asesor:response.correo_asesor,\r\n          month_income:response.ingresos,\r\n          other_income:response.otros_ingresos,\r\n          rent_expenses:response.arriendo,\r\n          food_expenses:response.alimentacion,\r\n          clothing_expenses:response.vestimenta,\r\n          basic_expenses:response.servicio_basicos,\r\n          education_expenses:response.educacion,\r\n          transport_expenses:response.transporte,\r\n          spouse_dni:response.cedula_conyugue,\r\n          spouse_email:response.email_conyugue,\r\n          spouse_cellphone:response.celular_conyugue,\r\n          spouse_landline:response.telefono_conyugue,\r\n          spouse_born_date:response.fecha_nacimiento_conyugue,\r\n          spouse_names:response.nombres_apellidos_conyugue.split(' ')[0],\r\n          spouse_last_names:response.nombres_apellidos_conyugue.split(' ')[1],\r\n\r\n\r\n        }\r\n        setData(data);\r\n        mostrarLoader(false);\r\n       \r\n      } else {\r\n       \r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n     \r\n    });\r\n};\r\n\r\nlet activacionesSgi=[\r\n  {id:1,name:\"Activaciones\",id_sgi:3},\r\n  {id:2,name:\"Digitales\",id_sgi:2},\r\n  {id:2,name:\"Digitales\",id_sgi:9},\r\n  {id:2,name:\"Digitales\",id_sgi:8},\r\n  {id:2,name:\"Digitales\",id_sgi:10},\r\n  {id:1,name:\"Digitales\",id_sgi:13},\r\n  {id:1,name:\"Digitales\",id_sgi:14},\r\n  {id:5,name:\"Digitales\",id_sgi:17},\r\n  {id:3,name:\"Digitales\",id_sgi:20},\r\n  {id:3,name:\"Digitales\",id_sgi:22},\r\n  {id:3,name:\"Ferias\",id_sgi:5},\r\n  {id:4,name:\"Masivos\",id_sgi:1},\r\n  {id:5,name:\"Referidos\",id_sgi:5},\r\n  {id:6,name:\"Otros\",id_sgi:3},\r\n]\r\nconst getActivacionId=(id_sgi)=> {\r\n  let id_como = 1;\r\n  activacionesSgi.map((e)=>{\r\n    if(id_sgi==e.id_sgi){\r\n      id_como=e.id;\r\n    }\r\n  \r\n  })\r\n  return id_como\r\n}\r\nexport const tieneConyuge = (client_id,setData) => {\r\n\r\n  let url = ENTRYPOINT+'client/has_spouse?client_id='+client_id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n\r\n        setData(response);\r\n       \r\n      } else {\r\n       \r\n   \r\n      }\r\n    })\r\n    .catch((error) => {\r\n    \r\n\r\n     \r\n    });\r\n};\r\nexport const tieneDependencia = (client_id,setData) => {\r\n\r\n  let url = ENTRYPOINT+'client/has_dependence?client_id='+client_id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n\r\n        setData(response);\r\n       \r\n      } else {\r\n       \r\n   \r\n      }\r\n    })\r\n    .catch((error) => {\r\n    \r\n\r\n     \r\n    });\r\n};\r\nexport const tieneArchivos = (client_id,setData) => {\r\n\r\n  let url = ENTRYPOINT+'client/files?client_id='+client_id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n\r\n        setData(response.files);\r\n       \r\n      } else {\r\n       \r\n   \r\n      }\r\n    })\r\n    .catch((error) => {\r\n    \r\n\r\n     \r\n    });\r\n};\r\nexport const tieneArchivosS = (client_id,setData) => {\r\n\r\n  let url = ENTRYPOINT+'spouse/files?spouse_id='+client_id;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \r\n    },\r\n  };\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n\r\n        setData(response.files);\r\n       \r\n      } else {\r\n       \r\n   \r\n      }\r\n    })\r\n    .catch((error) => {\r\n    \r\n\r\n     \r\n    });\r\n};\r\n\r\nexport const uploadFiles = (data, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  var resp = new FormData()\r\n  resp.append('dni-file', data.dni_file)\r\n  resp.append('roles-file',  data.roles_file)\r\n  resp.append('preca-file', data.preca_file)\r\n  resp.append('ruc-filesi', data.ruc_filesi)\r\n  resp.append('decla-filesi',  data.decla_filesi)\r\n  resp.append('mov-filesi', data.mov_filesi)\r\n  resp.append('dni',  data.dni)\r\n\r\n  \r\n  let url = ENTRYPOINT+\"client/editFiles\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n        //mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\nexport const upload = (data, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n \r\n  var resp = new FormData()\r\n  if(data.client_id!=null){\r\n    resp.append('client_id', data.client_id)\r\n  }\r\n  resp.append('dni-file', data.dni_file)\r\n  resp.append('roles-file1',  data.roles_file)\r\n  resp.append('roles-file2',  data.roles_file2)\r\n  resp.append('roles-file3',  data.roles_file3)\r\n  resp.append('preca-file', data.preca_file)\r\n  resp.append('precalification_file', data.precalification_file)\r\n  resp.append('mecanizado-file', data.mecanizado)\r\n\r\n  resp.append('monthly_iva',  data.monthly_iva)\r\n  \r\n  resp.append('ruc-filesi', data.ruc_filesi)\r\n  resp.append('decla-filesi',  data.decla_filesi)\r\n\r\n  resp.append('decla_filesi2',  data.decla_filesi2)\r\n  resp.append('decla_filesi3',  data.decla_filesi3)\r\n  resp.append('decla_filesi4',  data.decla_filesi4)\r\n  resp.append('decla_filesi5',  data.decla_filesi5)\r\n  resp.append('decla_filesi6',  data.decla_filesi6)\r\n\r\n  resp.append('declaIm-files',  data.renta_filesi)\r\n  resp.append('mov-filesi', data.mov_filesi)\r\n  resp.append('mov-filesi2', data.mov_filesi2)\r\n  resp.append('mov-filesi3', data.mov_filesi3)\r\n\r\n  \r\n  resp.append('dni',  data.dni)\r\n  resp.append('dependencia',  data.dependencia)\r\n\r\n  resp.append('monthly_ivaO',  data.monthly_ivaO)\r\n  resp.append('ruc_filesiO',  data.ruc_filesiO)\r\n  resp.append('decla_filesiO',  data.decla_filesiO)\r\n  resp.append('decla_filesi2O',  data.decla_filesi2O)\r\n  resp.append('decla_filesi3O',  data.decla_filesi3O)\r\n  resp.append('decla_filesi4O',  data.decla_filesi4O)\r\n  resp.append('decla_filesi5O',  data.decla_filesi5O)\r\n  resp.append('decla_filesi6O',  data.decla_filesi6O)\r\n\r\n  \r\n  resp.append('declaIm-filesO',  data.renta_filesiO)\r\n\r\n \r\n  resp.append('mov_filesiO1',  data.mov_filesiO1)\r\n  resp.append('mov_filesiO2',  data.mov_filesiO2)\r\n  resp.append('mov_filesiO3',  data.mov_filesiO3)\r\n  data.other_files.map((e)=>{\r\n    resp.append('file_'+e.nombre+\"_\"+e.id,  e.file)\r\n\r\n  })\r\n\r\n  let url = ENTRYPOINT+\"client/upload\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n      \r\n      //mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        //mostrarNotificacion({ type: \"error\", message: response.message });\r\n  \r\n      }\r\n    })\r\n    .catch((error) => {\r\n  \r\n\r\n     // mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\n\r\nexport const uploadConyuge = (data, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n\r\n\r\n  var resp = new FormData()\r\n  if(data.spouse_id!=null){\r\n    resp.append('spouse_id', data.spouse_id)\r\n  }\r\n  resp.append('dni-file', data.dni_file)\r\n  resp.append('roles-file1',  data.roles_file)\r\n  resp.append('roles-file2',  data.roles_file2)\r\n  resp.append('roles-file3',  data.roles_file3)\r\n  resp.append('preca-file', data.preca_file)\r\n  resp.append('monthly_iva',  data.monthly_iva)\r\n  resp.append('ruc-filesi', data.ruc_filesi)\r\n  resp.append('decla-filesi',  data.decla_filesi)       \r\n  resp.append('mecanizado-file',  data.mecanizado)       \r\n\r\n  resp.append('decla_filesi2',  data.decla_filesi2)\r\n  resp.append('decla_filesi3',  data.decla_filesi3)\r\n  resp.append('decla_filesi4',  data.decla_filesi4)\r\n  resp.append('decla_filesi5',  data.decla_filesi5)\r\n  resp.append('decla_filesi6',  data.decla_filesi6)\r\n\r\n  resp.append('declaIm-files',  data.renta_filesi)\r\n  resp.append('mov-filesi', data.mov_filesi)\r\n  resp.append('mov-filesi2', data.mov_filesi2)\r\n  resp.append('mov-filesi3', data.mov_filesi3)\r\n  resp.append('dni',  data.dni)\r\n  resp.append('dependencia',  data.dependencia)\r\n  resp.append('monthly_ivaOS',  data.monthly_ivaO)\r\n  resp.append('ruc_filesiOS',  data.ruc_filesiO)\r\n  resp.append('decla_filesiOS',  data.decla_filesiO)\r\n  resp.append('decla_filesi2OS',  data.decla_filesi2O)\r\n  resp.append('decla_filesi3OS',  data.decla_filesi3O)\r\n  resp.append('decla_filesi4OS',  data.decla_filesi4O)\r\n  resp.append('decla_filesi5OS',  data.decla_filesi5O)\r\n  resp.append('decla_filesi6OS',  data.decla_filesi6O)\r\n  resp.append('declaIm-filesOS',  data.renta_filesiO)\r\n  \r\n  resp.append('mov_filesiO1',  data.mov_filesiO1)\r\n  resp.append('mov_filesiO2',  data.mov_filesiO2)\r\n  resp.append('mov_filesiO3',  data.mov_filesiO3)\r\n  \r\n  let url = ENTRYPOINT+\"spouse/upload\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n      \r\n      //mostrarNotificacion({ type: \"success\", message: response.message });\r\n      } else {\r\n        //mostrarNotificacion({ type: \"error\", message: response.message });\r\n  \r\n      }\r\n    })\r\n    .catch((error) => {\r\n  \r\n\r\n     // mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n};\r\n\r\nexport const downloadFiles = (datos,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  const {dni,tipo}=datos\r\n  let url = ENTRYPOINT+\"client/download?dni=\"+dni+\"&tipo=\"+tipo;\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    responseType: 'blob',\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    }\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      console.log(\"ER\")\r\n      console.log(res)\r\n      if(res.data.type!=\"error\"){\r\n        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'file.pdf'); //or any other extension\r\n        document.body.appendChild(link);\r\n   \r\n        var oReq = new XMLHttpRequest();\r\n  \r\n        var URLToPDF = url;\r\n  \r\n        oReq.open(\"GET\", URLToPDF, true);\r\n  \r\n        oReq.responseType = \"blob\";\r\n  \r\n        oReq.onload = function() {\r\n            // Once the file is downloaded, open a new window with the PDF\r\n            // Remember to allow the POP-UPS in your browser\r\n            const file = new Blob([oReq.response], { type: 'application/pdf' });\r\n  \r\n            const fileURL = URL.createObjectURL(file);\r\n            setData(fileURL)\r\n            //window.open(fileURL, \"_blank\");\r\n        };\r\n  \r\n        oReq.send();\r\n        mostrarLoader(false);\r\n      \r\n      }else{\r\n      \r\n        mostrarLoader(false);\r\n        \r\n      }\r\n      \r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n   \r\n    });\r\n};\r\nexport const exportFiles = (store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n  let url = ENTRYPOINT+\"clients/export\"\r\n  let setting = {\r\n    method: \"GET\",\r\n    url: url,\r\n    responseType: 'blob',\r\n    headers: {\r\n      Accept: \"application/json\",\r\n    }\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      console.log(\"ER\")\r\n      console.log(res)\r\n      if(res.data.type!=\"error\"){\r\n        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'reporte.xlsx'); //or any other extension\r\n        document.body.appendChild(link);\r\n   \r\n        link.click();\r\n        mostrarLoader(false);\r\n      \r\n      }else{\r\n      \r\n        mostrarLoader(false);\r\n        \r\n      }\r\n      \r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n   \r\n    });\r\n};\r\nexport const eliminarCliente = (client_id,store,cargarData) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let url = ENTRYPOINT+\"client/delete\";\r\n  var raw = {\r\n    client_id:client_id,\r\n  };\r\n  let setting = {\r\n    method: \"DELETE\",\r\n    url: url,\r\n    data: raw,\r\n    body: raw,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n\r\n    }\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n      if(res.data.type!=\"error\"){\r\n      \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n        cargarData()\r\n      }else{\r\n      \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n      \r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n      mostrarNotificacion({ type: \"success\", message: error.message });\r\n    });\r\n};\r\nexport const importar = (data,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  var resp = new FormData()\r\n  resp.append('excel-file', data.excelFile)\r\n  \r\n  let url = ENTRYPOINT+\"clients/import\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: resp,\r\n    body: resp,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n\r\n    }\r\n  };\r\n \r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n      if(res.data.type!=\"error\"){\r\n      \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n   \r\n      }else{\r\n      \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n      }\r\n      \r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n      mostrarNotificacion({ type: \"success\", message: error.message });\r\n    });\r\n};\r\n\r\nexport const importarData = (data, store) => {\r\n  const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n  let url = ENTRYPOINT+\"importData\";\r\n  let setting = {\r\n    method: \"POST\",\r\n    url: url,\r\n    data: data,\r\n    body: data,\r\n    headers: { Accept: \"application/json\",\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n  };\r\n  mostrarLoader(true);\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data;\r\n      if (response.type != \"error\") {\r\n       \r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: response.message });\r\n    \r\n      } else {\r\n        mostrarNotificacion({ type: \"error\", message: response.message });\r\n        mostrarLoader(false);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      mostrarLoader(false);\r\n\r\n      mostrarNotificacion({ type: \"error\", message: error.message });\r\n    });\r\n}","import React,{useState} from 'react'\r\nimport Chart from \"react-apexcharts\";\r\nexport default function BarChart(props) {\r\n    const [series,setSeries]=useState([\r\n     {\r\n      name: 'Número',\r\n      data: props.values\r\n    }])\r\n      const [options,setOptions]=useState({\r\n        chart: {\r\n          height: 350,\r\n   \r\n          type: 'bar',\r\n          zoom: {\r\n            enabled: true,\r\n            type: 'x',\r\n            resetIcon: {\r\n                offsetX: -10,\r\n                offsetY: 0,\r\n                fillColor: '#fff',\r\n                strokeColor: '#37474F'\r\n            },\r\n            selection: {\r\n                background: '#90CAF9',\r\n                border: '#0D47A1'\r\n            }    \r\n        }\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            dataLabels: {\r\n              position: 'top', // top, center, bottom\r\n            },\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          formatter: function (val) {\r\n            return val ;\r\n          },\r\n          offsetY: -20,\r\n          style: {\r\n            fontSize: '12px',\r\n            colors: [\"#304758\"]\r\n          }\r\n        },\r\n        \r\n        xaxis: {\r\n          categories: props.labels,\r\n          position: 'bottom',\r\n          axisBorder: {\r\n            show: false\r\n          },\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n          crosshairs: {\r\n            fill: {\r\n              type: 'gradient',\r\n              gradient: {\r\n                colorFrom: '#D8E3F0',\r\n                colorTo: '#BED1E6',\r\n                stops: [0, 100],\r\n                opacityFrom: 0.4,\r\n                opacityTo: 0.5,\r\n              }\r\n            }\r\n          },\r\n          tooltip: {\r\n            enabled: true,\r\n          }\r\n        },\r\n        yaxis: {\r\n          axisBorder: {\r\n            show: false\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n          labels: {\r\n            show: false,\r\n            formatter: function (val) {\r\n              return val + \"%\";\r\n            }\r\n          }\r\n        \r\n        },\r\n        title: {\r\n          text: props.text,\r\n        \r\n          offsetY: 0,\r\n          align: 'center',\r\n          style: {\r\n            color: '#444',\r\n       \r\n          }\r\n        }\r\n      }) \r\n    \r\n        \r\n\r\n    return (\r\n       \r\n   \r\n\r\n        <Chart height={240} width={\"100%\"} options={options} series={series} type=\"bar\"  />\r\n\r\n    )\r\n}\r\n","export const dateFormat=(fecha)=>{\r\n\r\n    let dayInicio=fecha.getDate()<10?'0'+fecha.getDate():fecha.getDate()\r\n    let monthInicio=(fecha.getMonth()+1)<10?'0'+(fecha.getMonth()+1):(fecha.getMonth()+1)\r\n    let fechaFinal=dayInicio+'/'+monthInicio+'/'+fecha.getFullYear()+\" \"+fecha.getTime()\r\n    return fechaFinal\r\n}\r\nexport const  toIsoDate=(date)=> {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n \r\nexport const dateFormatA=(fecha)=>{\r\n\r\n    let dayInicio=fecha.getDate()<10?'0'+fecha.getDate():fecha.getDate()\r\n    let monthInicio=(fecha.getMonth()+1)<10?'0'+(fecha.getMonth()+1):(fecha.getMonth()+1)\r\n    let fechaFinal=dayInicio+'/'+monthInicio+'/'+fecha.getFullYear()\r\n    return fechaFinal\r\n}\r\nexport const utcDate=(fecha)=>{\r\n    let fechaFinal=null\r\nif(fecha!=null){\r\n    let dayInicio=fecha.getDate()<10?'0'+fecha.getDate():fecha.getDate()\r\n    let monthInicio=(fecha.getMonth()+1)<10?'0'+(fecha.getMonth()+1):(fecha.getMonth()+1)\r\n   fechaFinal=fecha.getFullYear()+'-'+monthInicio+'-'+dayInicio\r\n}\r\n\r\n    return fechaFinal\r\n}\r\nexport const getHours=(fecha)=>{\r\n\r\n    let fechaFinal=fecha.getHours()+':'+fecha.getMinutes()\r\n    return fechaFinal\r\n}\r\nexport const convertirDate=(dateString)=>{\r\n    if(dateString!=\"\"){\r\n        \r\n        let dateParts = dateString.split(\"/\");\r\n        let dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]); \r\n        return dateObject \r\n    }else{\r\n        return '';\r\n    }\r\n\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\nexport const editarSistema = (id,data, store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n   \r\n \r\n    let url = ENTRYPOINT+\"polls/\"+id;\r\n    let setting = {\r\n      method: \"PUT\",\r\n      url: url,\r\n      params:data,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  };\r\nexport const eliminarPool = (id,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\n    let url = ENTRYPOINT+\"polls/\"+id;\r\n    \r\n    let setting = {\r\n      method: \"DELETE\",\r\n      url: url,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,\r\n  \r\n      }\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n        if(res.data.type!=\"error\"){\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        }else{\r\n        \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n        mostrarNotificacion({ type: \"success\", message: error.message });\r\n      });\r\n  };\r\nexport const registrarSistema = (data,store) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"polls\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         \r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"polls\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const evaluar = (data,store,setIdPoll) => {\r\n    const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n    \r\n    let url = ENTRYPOINT+\"polls\";\r\n    let setting = {\r\n      method: \"POST\",\r\n      url: url,\r\n      data: data,\r\n      body: data,\r\n      headers: { Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,  },\r\n    };\r\n    mostrarLoader(true);\r\n  \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data;\r\n        if (response.type != \"error\") {\r\n         setIdPoll(response.id_poll)\r\n          mostrarLoader(false);\r\n          mostrarNotificacion({ type: \"success\", message: response.message });\r\n        } else {\r\n          mostrarNotificacion({ type: \"error\", message: response.message });\r\n          mostrarLoader(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        mostrarLoader(false);\r\n  \r\n        mostrarNotificacion({ type: \"error\", message: error.message });\r\n      });\r\n  }\r\n  export const obtenerPool = (id,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"polls/\"+id\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerPool2 = (id,setData,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"polls/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n      setData2(response.data.answers)\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerPoolResult = (id,setData,setData2,setData3,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"poll_result/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     if(response.data.length!=0){\r\n      setData3({\r\n        poll:response.data.poll.name,\r\n        poll_score:response.data.poll.score,\r\n       description:response.data.poll.descripcion,\r\n       system:response.data.system.name\r\n     \r\n      }\r\n       )\r\n    }\r\n    \r\n      setData(response.data.metric)\r\n      setData2(response.data.score)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n} \r\nexport const obtenerFeatureResult = (data,setLabels,setValues,setData) => {\r\n\r\nlet url = ENTRYPOINT+\"features_result\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:data,\r\n  headers: { 'Accept': 'application/json',\r\n }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    \r\n      setData(response.data.data)\r\n      setLabels(response.data.sub_caracteristica)\r\n      setValues(response.data.score)\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n} \r\nexport const obtenerPanelResult = (setData,setLabels,setValues,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let url = ENTRYPOINT+\"obtener_panel_result\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, \r\n\r\n   }\r\n  \r\n  };\r\n  \r\n  \r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n      setData(response.data)\r\n        setLabels(response.data1.labels)\r\n        setValues(response.data1.values)\r\n  \r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n  \r\n  \r\n    });\r\n  } \r\n  \r\n  export const obtenerMetricasSistemas = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n    let url = ENTRYPOINT+\"metrics_systems\"\r\n    let setting = {\r\n      method: \"Get\",\r\n      url: url,\r\n      headers: { 'Accept': 'application/json',    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, \r\n  \r\n     }\r\n    \r\n    };\r\n    \r\n    \r\n    axios(setting)\r\n      .then((res) => {\r\n        let response = res.data\r\n       if(response.type!=\"error\"){\r\n        setData(response.data)\r\n\r\n       }else{\r\n       \r\n       }\r\n      })\r\n      .catch((error) => {\r\n       \r\n    \r\n    \r\n      });\r\n    } \r\n    \r\n\r\n    export const editarPoll = (id,data, store,carga) => {\r\n      const { usuario, mostrarNotificacion, mostrarLoader } = store;\r\n     \r\n   \r\n      let url = ENTRYPOINT+\"polls/\"+id;\r\n      let setting = {\r\n        method: \"PUT\",\r\n        url: url,\r\n        params:data,\r\n        data: data,\r\n        body: data,\r\n        headers: { Accept: \"application/json\",  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, },\r\n      };\r\n      mostrarLoader(true);\r\n    \r\n      axios(setting)\r\n        .then((res) => {\r\n          let response = res.data;\r\n          if (response.type != \"error\") {\r\n           carga()\r\n            mostrarLoader(false);\r\n            mostrarNotificacion({ type: \"success\", message: response.message });\r\n          } else {\r\n            mostrarNotificacion({ type: \"error\", message: response.message });\r\n            mostrarLoader(false);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          mostrarLoader(false);\r\n    \r\n          mostrarNotificacion({ type: \"error\", message: error.message });\r\n        });\r\n    };","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT,LARAVEL_SGI} from '../../config/API'\r\nconst axios = require('axios');\r\n\r\nexport const obtenerTodosPorPoll = (id,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n\r\nlet url = ENTRYPOINT+\"showByPoll/\"+id\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',\r\n  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData(response.data)\r\n   \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerTodos = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"metrics\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerPreguntas = (data,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"questions\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    params:data,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerOpciones = (setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n \r\n  let url = ENTRYPOINT+\"options\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',\r\n    Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token, }\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n     \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}","export default __webpack_public_path__ + \"static/media/noValue.30b18636.svg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport { utcDate } from '../../../utils/Date'\r\nimport {\r\n    DatePicker,\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport es from 'date-fns/locale/es'\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n\r\nimport { Chip, Grid, IconButton } from '@material-ui/core';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const getFirst = () => {\r\n        let date = new Date();\r\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\r\n\r\n        return primerDia\r\n    }\r\n    const getLast = () => {\r\n        let date = new Date();\r\n\r\n        let ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        return ultimoDia\r\n    }\r\n    function addDaysToDate(date, days){\r\n        var res = new Date(date);\r\n        res.setDate(res.getDate() + days);\r\n        return res;\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <span>Filtro</span>\r\n            <IconButton aria-label=\"abrirmodal\" onClick={handleClickOpen}>\r\n                <DateRangeIcon />\r\n            </IconButton>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Filtros</DialogTitle>\r\n                <DialogContent>\r\n\r\n\r\n                    <Grid container spacing={2}>\r\n                \r\n\r\n                        <Grid item md={12} xs={12}>\r\n\r\n\r\n                            <MuiPickersUtilsProvider style={{ width: \"100%\" }} utils={DateFnsUtils} locale={es}>\r\n                                <KeyboardDatePicker\r\n                                    autoOk\r\n\r\n                                    ampm={false}\r\n                                    size=\"small\"\r\n                                    inputVariant=\"outlined\"\r\n                                    label=\"Desde\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    // disablePast\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={props.desde}\r\n\r\n                                    onChange={date => props.setDesde(date)}\r\n                                />\r\n\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12}>\r\n\r\n\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n                                <KeyboardDatePicker\r\n                                    autoOk\r\n\r\n                                    ampm={false}\r\n                                    size=\"small\"\r\n                                    inputVariant=\"outlined\"\r\n                                    label=\"Hasta\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    // disablePast\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={props.hasta}\r\n\r\n                                    onChange={date => props.setHasta(date)}\r\n                                />\r\n\r\n\r\n                            </MuiPickersUtilsProvider>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid item md={12} xs={12}>\r\n\r\n                            <Button   startIcon={<DateRangeIcon />} onClick={() => {\r\n                                    props.setDesde(getFirst())\r\n                                    props.setHasta(getLast())\r\n    \r\n                                }}  variant=\"contained\" color=\"primary\">\r\n                              Mes actual\r\n                            </Button>\r\n                         \r\n                          \r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={() => {\r\n                        props.filtrarFecha()\r\n                        handleClose()\r\n                    }} color=\"primary\">\r\n                        Aceptar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import {encriptarJson,desencriptarJson} from '../security'\r\nimport {ENTRYPOINT} from '../../config/API'\r\nconst axios = require('axios');\r\n\r\nexport const obtenerProductosBodegas = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  \r\nlet url = ENTRYPOINT+\"warehouse_by_products\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:data,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n};\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     console.log(response.data)\r\n    setData({values:response.data.cantidad,labels:response.data.bodegas})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerIngresosEgresos = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  \r\nlet url = ENTRYPOINT+\"income_expense\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:data,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n};\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     console.log(response.data)\r\n    setData({ingresos:response.data.ingresos,egresos:response.data.egresos})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const totalComprasUltimosMeses = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  \r\nlet url = ENTRYPOINT+\"last_total_orders\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:data,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n};\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     console.log(response.data)\r\n    setData({mes:response.data.mes,total:response.data.total})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerTareasStatus = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  \r\nlet url = ENTRYPOINT+\"tasks_status\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:data,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n};\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     console.log(response.data)\r\n    setData({completas:response.data.completadas,incompletas:response.data.sinCompletar})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerPedidosStatus = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  \r\nlet url = ENTRYPOINT+\"solicitudes_status\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  params:data,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n};\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n     console.log(response.data)\r\n    setData({autorizados:response.data.autorizados,noAutorizados:response.data.noAutorizados})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\n\r\nexport const obtenerStatusPorAsesor = (asesor,setData1,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet asesor_id = asesor \r\nif(JSON.parse(desencriptarJson(usuario)).user.type_user == \"asessor\"){\r\n  asesor_id = JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}\r\n\r\nlet url = ENTRYPOINT+\"clients/status_by_asesor?asesor_id=\"+asesor_id+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({values:response.data,labels:response.types})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerClientesPorPaso = (setData1,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"clients_by_step\"+\"?min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({values:response.clients,labels:response.types})\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerKpis = (data,setData,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"kpis\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    params:data,\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData(response.data)\r\n      \r\n      //  setData4(response.leads)\r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerKpisA = (setData1,setData2,setData3,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\nlet query = \"\"\r\n  if(JSON.parse(desencriptarJson(usuario)).user.type_user == \"asessor\"){\r\n    query = \"asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}else{\r\n  query = \"supervisor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}\r\nlet url = ENTRYPOINT+\"kpis?min=\"+min+\"&max=\"+max+\"&\"+query\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.leads)\r\n      setData2(response.citas)\r\n      setData3(response.calls)\r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerKpisR = (setData1,store,asesor,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor!=''){\r\n    id_asesor = asesor\r\n  }\r\nlet url = ENTRYPOINT+\"kpis_performance?asesor_id=\"+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({citations1:response.citas,citations2:response.citas_efectivas,calls1:response.calls,calls2:response.calls_efectivas})\r\n     \r\n \r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const getFactibilidad = (setData,store,asesor_id,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\nlet url = ENTRYPOINT+'getFactibilidad?id_asesor='+asesor_id+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    let temp =response.data\r\n    \r\n   \r\n     setData(temp)\r\n\r\n\r\n      \r\n      \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerEstadoProspectos = (setData,store,asesor_id,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  }\r\nlet url = ENTRYPOINT+'client/get_purchase_status?asesor_id='+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    let temp =response.data\r\n    let values = []\r\n    let label = []\r\n    temp.map((e)=>{\r\n      values.push(e.count)\r\n      if(e.estado_compra==0){\r\n        label.push('Bajo (No esta decidido)')\r\n      }else if(e.estado_compra==1){\r\n        label.push('Medio (Va a comprar en un mes)')\r\n        \r\n      }else if(e.estado_compra==2){\r\n        label.push('Alto (Va a comprar en 8 días)')\r\n      }\r\n      \r\n    })\r\n   \r\n     setData({value:values,label:label})\r\n\r\n\r\n      \r\n      \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerGoalEffeectiveCitations = (setData,store,asesor,month,year) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_effective_citations?asesor='+asesor+\"&month=\"+month+\"&year=\"+year\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\n\r\n     setData({total_performance:response.total_performance,obtained:response.obtained,goal:response.global_goal,performance:response.performance,label:response.categories})\r\n\r\n\r\n      \r\n      \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerMetasObtenidasPorSupervisor = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_obtained_supervisor'\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,},\r\n  params: data\r\n};\r\n\r\nmostrarLoader(true)\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\nlet values=[]\r\nlet labels=[]\r\nlet obtained=[]\r\n\r\nresponse.data.map((e)=>{\r\n  values.push(e.goal!=null?e.goal:0)\r\n  obtained.push(e.obtained!=null?e.obtained:0)\r\n labels.push(e.names.replace(/ .*/,'')+\" \"+e.last_names.replace(/ .*/,''))\r\n})\r\n\r\nsetData({goal:values,labels:labels,obtained:obtained})\r\n \r\n\r\n      \r\n      \r\n     mostrarLoader(false)\r\n\r\n   }else{\r\n    mostrarLoader(false)\r\n\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    mostrarLoader(false)\r\n\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerMetasPorAsesor = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_by_asesor'\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,},\r\n  params: data\r\n};\r\n\r\nmostrarLoader(true)\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\nlet values=[]\r\nlet labels=[]\r\n\r\nresponse.data.map((e)=>{\r\n  values.push(e.goal)\r\n  labels.push(e.names.replace(/ .*/,'')+\" \"+e.last_names.replace(/ .*/,''))\r\n})\r\nsetData({values:values,labels:labels})\r\n     //setData({total_performance:response.total_performance,obtained:response.obtained,goal:response.global_goal,performance:response.performance,label:response.categories})\r\n\r\n\r\n      \r\n      \r\n     mostrarLoader(false)\r\n\r\n   }else{\r\n    mostrarLoader(false)\r\n\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    mostrarLoader(false)\r\n\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerMetasPorSupervisor = (data,setData,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n /*  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor_id!=''){\r\n    id_asesor = asesor_id\r\n  } */\r\n\r\nlet url = ENTRYPOINT+'goals/get_by_supervisor'\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,},\r\n  params: data\r\n};\r\n\r\nmostrarLoader(true)\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n   \r\nlet values=[]\r\nlet labels=[]\r\nlet ids=[]\r\nresponse.data.map((e)=>{\r\n  ids.push(e.id)\r\n  values.push(e.goal)\r\n  labels.push(e.month.trim())\r\n})\r\nsetData({ids:ids,values:values,labels:labels})\r\n     //setData({total_performance:response.total_performance,obtained:response.obtained,goal:response.global_goal,performance:response.performance,label:response.categories})\r\n\r\n\r\n      \r\n      \r\n     mostrarLoader(false)\r\n\r\n   }else{\r\n    mostrarLoader(false)\r\n\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    mostrarLoader(false)\r\n\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerCitasPorSemana = (setData1,setData2,store,asesor,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor!=''){\r\n    id_asesor = asesor\r\n  }\r\nlet url = ENTRYPOINT+\"citations_by_week?asesor_id=\"+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n /*     console.log(JSON.stringify(response))\r\n  \r\n     let citas = response.citas\r\n     let citas_efectivas = response.citas_efectivas\r\n    let value1 = []\r\n    let label1 = []\r\n\r\n    let value2 = []\r\n    let label2 = []\r\n\r\n    citas.map((e)=>{\r\n      label1.push(e.range)\r\n      value1.push(e.count)\r\n    })\r\n    citas_efectivas.map((e)=>{\r\n      label2.push(e.range)\r\n      value2.push(e.count)\r\n    })\r\n */\r\n    // setData1({values:value1,labels:label1})\r\n    // setData2({values:value2,labels:label2})\r\n\r\n    setData1({data:response.citas,backup:response.citas})\r\n    setData2({data:response.citas_efectivas,backup:response.citas_efectivas})\r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n    console.log(error)\r\n\r\n\r\n  });\r\n}\r\nexport const obtenerLlamadasPorSemana = (setData1,setData2,store,asesor,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let id_asesor=JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n  if(asesor!=''){\r\n    id_asesor = asesor\r\n  }\r\nlet url = ENTRYPOINT+\"calls_by_week?asesor_id=\"+id_asesor+\"&min=\"+min+\"&max=\"+max\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n/*      console.log(response)\r\n     let citas = response.calls\r\n     let citas_efectivas = response.calls_efectivas\r\n    let value1 = []\r\n    let label1 = []\r\n\r\n    let value2 = []\r\n    let label2 = []\r\n\r\n    citas.map((e)=>{\r\n      label1.push(e.range)\r\n      value1.push(e.count)\r\n    })\r\n    citas_efectivas.map((e)=>{\r\n      label2.push(e.range)\r\n      value2.push(e.count)\r\n    })\r\n\r\n     setData1({values:value1,labels:label1})\r\n     setData2({values:value2,labels:label2}) */\r\n     \r\n     setData1({data:response.calls,backup:response.calls})\r\n     setData2({data:response.calls_efectivas,backup:response.calls_efectivas})\r\n\r\n   }else{\r\n   console.log(\"error\")\r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\nexport const obtenerClientesPorMes = (setData1,store,min,max) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  let query = \"\"\r\n  if(JSON.parse(desencriptarJson(usuario)).user.type_user == \"asessor\"){\r\n    query = \"asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}else if(JSON.parse(desencriptarJson(usuario)).user.type_user == \"supervisor\"){\r\n  query = \"supervisor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\n}\r\nlet url = ENTRYPOINT+\"clients_by_month\"+\"?min=\"+min+\"&max=\"+max+\"&\"+query\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1({data:response.clients,backup:response.clients})\r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerCitasAsesores = (setData1,setData2,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"cites_by_monthAll\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData1(response.clients)\r\n        setData2(response.months)\r\n       \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerCitasPorMes = (setData1,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"cites_by_month?asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.clients)\r\n      setData2(response.months)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\n\r\nexport const obtenerClientesPorTipo = (setData1,setData2,store,min,max) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"clients_by_type\"+\"?min=\"+min+\"&max=\"+max\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData1(response.clients)\r\n        setData2(response.types)\r\n       \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerAsesoresPorProduccion = (setData1,setData2,store) => {\r\n    const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n \r\n  let url = ENTRYPOINT+\"assesors_by_production\"\r\n  let setting = {\r\n    method: \"Get\",\r\n    url: url,\r\n    headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n  };\r\n\r\n\r\n  axios(setting)\r\n    .then((res) => {\r\n      let response = res.data\r\n     if(response.type!=\"error\"){\r\n        setData1(response.assesors)\r\n        setData2(response.productions)\r\n       \r\n\r\n     }else{\r\n     \r\n     }\r\n    })\r\n    .catch((error) => {\r\n     \r\n\r\n\r\n    });\r\n}\r\nexport const obtenerSupervisorProProduccion = (setData1,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"supervisors_by_production\"\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.assesors)\r\n      setData2(response.productions)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n\r\n\r\nexport const obtenerLeadsPorMes = (setData1,setData2,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n  \r\nlet url = ENTRYPOINT+\"assesors/leads_month?asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n      setData1(response.leads)\r\n      setData2(response.months)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\nexport const obtenerKpisAsesor = (setData4,store) => {\r\n  const { usuario, cargarUsuario, mostrarNotificacion, mostrarLoader } = store;\r\n\r\nlet url = ENTRYPOINT+\"assesors/pending_leads?asesor_id=\"+JSON.parse(desencriptarJson(usuario)).user.user_ca\r\nlet setting = {\r\n  method: \"Get\",\r\n  url: url,\r\n  headers: { 'Accept': 'application/json',  Authorization: \"Bearer \" + JSON.parse(desencriptarJson(usuario)).token,}\r\n\r\n};\r\n\r\n\r\naxios(setting)\r\n  .then((res) => {\r\n    let response = res.data\r\n   if(response.type!=\"error\"){\r\n    setData4(response.leads)\r\n     \r\n\r\n   }else{\r\n   \r\n   }\r\n  })\r\n  .catch((error) => {\r\n   \r\n\r\n\r\n  });\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport ImportExportIcon from '@material-ui/icons/ImportExportOutlined';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst dataSet1 = [\r\n    {\r\n        name: \"Johson\",\r\n        amount: 30000,\r\n        sex: 'M',\r\n        is_married: true\r\n    },\r\n    {\r\n        name: \"Monika\",\r\n        amount: 355000,\r\n        sex: 'F',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"John\",\r\n        amount: 250000,\r\n        sex: 'M',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"Josef\",\r\n        amount: 450500,\r\n        sex: 'M',\r\n        is_married: true\r\n    }\r\n];\r\n\r\nconst dataSet2 = [\r\n    {\r\n        name: \"Johnson\",\r\n        total: 25,\r\n        remainig: 16\r\n    },\r\n    {\r\n        name: \"Josef\",\r\n        total: 25,\r\n        remainig: 7\r\n    }\r\n];\r\n\r\nexport default class Download extends React.Component {\r\n  \r\n    render() {\r\n\r\n        return (\r\n            <ExcelFile  element={\r\n                <IconButton aria-label=\"abrirmodal\">\r\n                <SaveAlt />\r\n                </IconButton>\r\n\r\n                }>\r\n                <ExcelSheet data={this.props.productos} name=\"Productos\">\r\n                    <ExcelColumn label=\"Nombre\" value=\"name\"/>\r\n                    <ExcelColumn label=\"Stock\" value=\"stock\"/>\r\n                    <ExcelColumn label=\"Precio\" value=\"price\"/>\r\n                </ExcelSheet>\r\n            \r\n            </ExcelFile>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Initializer from '../../store/Initializer'\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { LocalizationTable, TableIcons, removeAccent } from '../../utils/table.js'\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, IconButton } from '@material-ui/core';\r\nimport { obtenerSistemaEvaluaciones, obtenerTodos } from '../../utils/API/sistemas.js';\r\nimport Crear from './components/Crear'\r\nimport Eliminar from './components/Eliminar'\r\nimport { obtenerTodos as obtenerMetricasSistemas } from '../../utils/API/clientes';\r\nimport Bar from './components/Bar';\r\nimport BarVertical from './components/BarVertical';\r\nimport PieChart from './components/PieChart';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport FeaturedVideoIcon from '@material-ui/icons/FeaturedVideo';\r\nimport { utcDate } from '../../utils/Date'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tab2 from './components/Tab2';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Radio from './components/Radio';\r\nimport noValue from '../../assets/noValue.svg'\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport FiltroPanel from './components/FiltroPanel';\r\nimport { ObtenerGrafico1 } from '../../utils/API/reporte';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { obtenerIngresosEgresos, obtenerKpis, obtenerPedidosStatus, obtenerProductosBodegas, obtenerStatusPorSupervisor, obtenerTareasStatus, totalComprasUltimosMeses } from '../../utils/API/dashboard';\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport Lineal from './components/Lineal'\r\nimport { obtenerNúmeroCategorías, obtenerNúmeroProductos, obtenerTodos as obtenerOrdenes } from '../../utils/API/commerce';\r\nimport Print from './components/Print'\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    card: {\r\n        backgroundColor: \"#5e35b1\",\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n\r\n    },\r\n    card2: {\r\n        backgroundColor: \"#5e35b1\",\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n\r\n    },\r\n    card3: {\r\n        backgroundColor: \"#26C367\",\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n\r\n    },\r\n    card4: {\r\n        backgroundColor: \"#E7564A\",\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\nexport default function Sistemas(props) {\r\n    const initializer = React.useContext(Initializer);\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = React.useState(null)\r\n    const [data0, setData0] = React.useState([])\r\n    const [desde, setDesde] = React.useState(null)\r\n    const [hasta, setHasta] = React.useState(null)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [open2, setOpen2] = React.useState(false)\r\n    const [selected, setSelected] = React.useState(null)\r\n    const [selected2, setSelected2] = React.useState(null)\r\n    const [values, setValues] = React.useState([])\r\n    const [labels, setLabels] = React.useState([])\r\n    const [values2, setValues2] = React.useState([])\r\n    const [labels2, setLabels2] = React.useState([])\r\n    const [value, setValue] = React.useState(0);\r\n    const [sistemas, setSistemas] = React.useState([])\r\n    const [sistema, setSistema] = React.useState('')\r\n    const [data1, setData1] = React.useState({ values: [], labels: [] })\r\n    const [data2, setData2] = React.useState({ completas: 0, incompletas: 0 })\r\n    const [data3, setData3] = React.useState({ autorizados: 0, noAutorizados: 0 })\r\n    const [data4, setData4] = React.useState({ ingresos: 0, egresos: 0 })\r\n    const [data5, setData5] = React.useState({ mes: [], total: [] })\r\n\r\n    const [cajaAbierta, setCajaAbierta] = React.useState(null)\r\n    const [comprasVentas, setComprasVentas] = React.useState({ ventas: [], compras: [] })\r\n    const [cajaVenta, setCajaVenta] = React.useState({ factura: [], caja: [] })\r\n\r\n    const [dataVentas, setDataVentas] = React.useState({ ventas: 0, valor: 0 });\r\n    const [dataCategorias, setDataCategorias] = React.useState(0);\r\n    const [dataProductos, setDataProductos] = React.useState(0);\r\n    const [dataInventario, setDataInventario] = React.useState({ values: [], labels: [] });\r\n    const [productos, setProductos] = React.useState([]);\r\n    const [todosProductos, setTodosProductos] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n\r\n        // obtenerKpisPanel({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData, initializer)\r\n        /*        obtenerProductosBodegas({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData1, initializer)\r\n               obtenerTareasStatus({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData2, initializer)\r\n               obtenerKpis({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData, initializer)\r\n               obtenerPedidosStatus({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData3, initializer)\r\n               obtenerIngresosEgresos({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData4, initializer)\r\n    \r\n               totalComprasUltimosMeses({desde:utcDate(getFirst()),hasta:utcDate(getLast())},setData5, initializer) */\r\n        //ObtenerGrafico1(setData1,initializer)\r\n\r\n        obtenerOrdenes(null, setDataVentas, initializer);\r\n        obtenerNúmeroCategorías(null, setDataCategorias, initializer)\r\n        obtenerNúmeroProductos(null, setDataProductos, setDataInventario, setProductos,setTodosProductos, initializer)\r\n\r\n\r\n\r\n    }, [])\r\n    console.log(dataVentas)\r\n    const getFirstLast = () => {\r\n        if (desde == null && hasta == null) {\r\n            return \"(No ha seleccionado un rango)\"\r\n        } else {\r\n            return \"(\" + utcDate(desde) + \" hasta \" + utcDate(hasta) + \")\"\r\n        }\r\n\r\n    }\r\n    const getFirst = () => {\r\n        let date = new Date();\r\n        let primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\r\n\r\n        return primerDia\r\n    }\r\n    const getLast = () => {\r\n        let date = new Date();\r\n\r\n        let ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        return ultimoDia\r\n    }\r\n    const carga = () => {\r\n        setSelected(null)\r\n        setSelected2(null)\r\n    }\r\n\r\n    const total = () => {\r\n        let tot = 0\r\n        data0.map((e) => {\r\n            tot += e.evaluaciones\r\n        })\r\n        return tot\r\n    }\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const getName = (id) => {\r\n        let object = null\r\n        sistemas.map((e) => {\r\n            if (id == e.id) {\r\n                object = { ...e }\r\n            }\r\n        })\r\n        return object\r\n    }\r\n    const filtrarFecha = () => {\r\n        setDataCategorias(0)\r\n        setDataProductos(0)\r\n        setDataInventario({ values: [], labels: [] })\r\n        setDataVentas({ ventas: 0, valor: 0 })\r\n        obtenerNúmeroCategorías({ desde: desde, hasta: hasta }, setDataCategorias, initializer)\r\n        obtenerNúmeroProductos({ desde: desde, hasta: hasta }, setDataProductos, setDataInventario, example, setTodosProductos,initializer)\r\n        obtenerOrdenes({ desde: desde, hasta: hasta }, setDataVentas, initializer);\r\n\r\n    }\r\n    const example=()=>{\r\n\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Crear sistema={selected} setSelected={setSelected} setOpen={setOpen} open={open} carga={carga} />\r\n            <Eliminar sistema={selected2} setOpen={setOpen2} open={open2} carga={carga} />\r\n            <Grid item xs={12} md={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Typography variant=\"h5\" >\r\n                    Dashboard\r\n                </Typography>\r\n\r\n                <FiltroPanel desde={desde} hasta={hasta} setDesde={setDesde} setHasta={setHasta} filtrarFecha={filtrarFecha} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <Alert severity=\"info\">\r\n                            <Typography color=\"initial\">Rango {getFirstLast()}</Typography>\r\n                        </Alert>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={3}>\r\n\r\n                        <Card class={classes.card} style={{ width: '100%', height: 120, marginRight: 20, marginBottom: 5, backgroundColor: '#9b59b6', borderRadius: 12 }}>\r\n                            <CardContent>\r\n\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <Typography variant=\"h4\" style={{ color: 'white', }} >\r\n                                        ${dataVentas.valor}\r\n                                    </Typography>\r\n                                    <MonetizationOnIcon style={{ marginTop: 5, borderRadius: 5, marginBottom: 15, fontSize: 50 }} fontSize='24' />\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                <Typography variant=\"h6\" style={{ color: 'white' }} gutterBottom>\r\n                                    Monto de ventas\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Card class={classes.card2} style={{ width: '100%', height: 120, marginRight: 20, marginBottom: 5, backgroundColor: '#3498db', borderRadius: 12 }}>\r\n                            <CardContent>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <Typography variant=\"h4\" style={{ color: 'white', }} >\r\n                                        {dataVentas.ventas}\r\n                                    </Typography>\r\n                                    <AccountBalanceWalletIcon style={{ marginTop: 5, borderRadius: 5, marginBottom: 15, fontSize: 50 }} fontSize='24' />\r\n\r\n                                </div>\r\n\r\n                                <Typography variant=\"h6\" style={{ color: 'white' }} gutterBottom>\r\n                                    Número de ventas\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Card class={classes.card3} style={{ width: '100%', height: 120, marginRight: 20, marginBottom: 5, backgroundColor: '#e67e22', borderRadius: 12 }}>\r\n                            <CardContent>\r\n\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <Typography variant=\"h4\" style={{ color: 'white', }} >\r\n                                        {dataProductos}\r\n                                    </Typography>\r\n                                    <FeaturedVideoIcon style={{ marginTop: 5, borderRadius: 5, marginBottom: 15, fontSize: 50 }} fontSize='24' />\r\n\r\n                                </div>\r\n\r\n\r\n                                <Typography variant=\"h6\" style={{ color: 'white' }} gutterBottom>\r\n                                    Número productos\r\n                                </Typography>\r\n\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                        <Card class={classes.card4} style={{ width: '100%', height: 120, marginRight: 20, marginBottom: 5, backgroundColor: '#e74c3c', borderRadius: 12 }}>\r\n                            <CardContent>\r\n\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <Typography variant=\"h4\" style={{ color: 'white', }} >\r\n                                        {dataCategorias}\r\n                                    </Typography>\r\n                                    <CategoryIcon style={{ marginTop: 5, borderRadius: 5, marginBottom: 15, fontSize: 50 }} fontSize='24' />\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <Typography variant=\"h6\" style={{ color: 'white' }} gutterBottom>\r\n                                    Número categorías\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item md={12} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n                    {\r\n                        dataInventario.values.length != 0 && dataInventario.labels.length != 0 ? (\r\n                            <Bar values={dataInventario.values} labels={dataInventario.labels} text=\"Stock por productos\" />\r\n                        )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n            {/* \r\n            <Grid item md={6} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n                \r\n                {\r\n                        data2.completas != 0 ||data2.incompletas != 0 ? (\r\n                            <PieChart type=\"donut\" completas={data2.completas} incompletas={data2.incompletas} labels={['Completas','Incompletas']} text=\"Estado de tareas\"/>\r\n                            )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n                \r\n                {\r\n                        data3.autorizados != 0 || data3.noAutorizados != 0 ? (\r\n                            <PieChart type=\"pie\" completas={data3.autorizados} incompletas={data3.noAutorizados} labels={['Autorizados','No autorizados']} text=\"Estado de pedidos\"/>\r\n                            )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n\r\n                {\r\n                        data4.ingresos != 0 ||data4.egresos != 0 ? (\r\n                            <BarVertical ingresos={data4.ingresos} egresos={data4.egresos} text=\"Ingresos/Egresos\"/>\r\n                            )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n                <div style={{ marginTop: 15 }} >\r\n\r\n                {\r\n                        data5.mes.length!= 0 ||data5.total.length != 0 ? (\r\n                            <Lineal  mes={data5.mes} total={data5.total} text=\"Compras de los últimos 6 meses\"/>\r\n                            )\r\n                            :\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                                <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                                <p>No hay registros</p>\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </Grid> */}\r\n            {/*      \r\n            <Grid item md={6} xs={12} style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n                {\r\n                    labels2.length != 0 && values2.length != 0 ? (\r\n                        <Radio values={values2} labels={labels2} />\r\n                    )\r\n                        :\r\n                        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n                            <img src={noValue} width={150} height={150} alt=\"\" srcset=\"\" />\r\n                            <p>No hay registros</p>\r\n                        </div>\r\n                }\r\n\r\n\r\n            </Grid> */}\r\n            <Grid item md={12} xs={12}>\r\n                <MaterialTable\r\n                    icons={TableIcons}\r\n                    columns={[\r\n                        { title: \"Imagen\", field: \"image\", render: rowData => <img src={rowData.image} width={50} height={50} alt=\"\" srcset=\"\" style={{borderRadius:50}}/> },\r\n\r\n                        { title: \"Nombre\", field: \"name\" },\r\n\r\n                        {\r\n                            title: \"Stock\", field: \"stock\"\r\n                        },\r\n                        {\r\n                            title: \"Precio\", field: \"price\", type: \"currency\",\r\n                        }\r\n\r\n\r\n\r\n                    ]}\r\n                    data={\r\n                        productos\r\n                    }\r\n                    localization={LocalizationTable}\r\n\r\n\r\n                    title={\r\n                        <div>\r\n                            <Typography style={{display:'inline'}}>Últimos 5 productos</Typography>\r\n                            <Print productos={todosProductos}/>\r\n                        </div>\r\n\r\n                    }\r\n                    options={{\r\n\r\n                        actionsColumnIndex: -1,\r\n                        search: false,\r\n                        maxBodyHeight: 350,\r\n                        padding: 'dense',\r\n                        headerStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        cellStyle: {\r\n                            textAlign: 'left'\r\n                        },\r\n                        searchFieldStyle: {\r\n\r\n                            padding: 5\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n","\nimport React, { useContext, useState } from 'react';\nimport AppBar from './components/AppBar'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, Redirect\n} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n//Containers\nimport blue from '@material-ui/core/colors/blue';\nimport pink from '@material-ui/core/colors/pink';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport Initializer from './store/Initializer'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Login from './containers/main/Login'\nimport { useHistory } from \"react-router-dom\";\nimport Drawer2 from './components/Drawer2'\nimport purple from '@material-ui/core/colors/purple';\n\n/* import Bienvenida from './containers/main/Bienvenida'\n\n\n\nimport Sistemas from './containers/panel/Sistemas'\nimport Resultado from './containers/panel/Resultado';\nimport Settings from './containers/panel/Settings';\n */\n\nimport Panel from './containers/panel/Panel';\n\nimport { indigo } from '@material-ui/core/colors';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function App(props) {\n  const { usuario, notificacion, mostrarNotificacion, loader, sound, playSound } = useContext(Initializer);\n  let history = useHistory();\n  const [colorP, setColorP] = useState(purple)\n  const [colorS, setColorS] = useState(purple)\n  const [white, setWhite] = useState(createMuiTheme({\n    palette: {\n      primary: colorP,\n      secondary: colorS,\n      type: 'light',\n    },\n\n  }))\n  const [dark, setDark] = useState(createMuiTheme({\n    palette: {\n      primary: colorP,\n\n      secondary: colorS,\n\n      type: 'dark',\n    },\n\n  }))\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    mostrarNotificacion(null);\n  };\n  React.useEffect(() => {\n    if (notificacion != null) {\n\n      setTimeout(function () { mostrarNotificacion(null) }, 3000);\n    }\n  }\n    , [notificacion])\n  var themeLight = createMuiTheme({\n    palette: {\n      primary: colorP,\n      secondary: colorS,\n      type: 'light',\n    },\n\n  });\n  var themeDark = createMuiTheme({\n    palette: {\n      primary: colorP,\n\n      secondary: colorS,\n\n      type: 'dark',\n    },\n\n  });\n  React.useEffect(() => {\n    setWhite(createMuiTheme({\n      palette: {\n        primary: {\n          main: colorP[500],\n        },\n\n        secondary: {\n          main: colorS['A400'],\n        },\n        type: 'light',\n      },\n\n      overrides: {\n        MuiCssBaseline: {\n          '@global': {\n            '*': {\n              'scrollbar-width': 'thin',\n            },\n            '*::-webkit-scrollbar': {\n              width: '4px',\n              height: '4px',\n            }\n          }\n        }\n      }\n    \n    }))\n    setDark(createMuiTheme({\n      palette: {\n        primary: {\n          main: colorP[500],\n        },\n        secondary: {\n          main: colorS['A400'],\n        },\n        type: 'dark',\n      },\n\n    }))\n  }, [colorP, colorS])\n  let themeFinal = white\n  let tm = localStorage.getItem(\"theme\");\n\n\n  let [themeColor, setThemeColor] = useState(themeFinal);\n  let changeTheme = () => {\n    let ct = themeColor.palette.type === \"light\" ? dark : white;\n    setThemeColor(ct);\n    let color = themeColor.palette.type == \"light\" ? \"dark\" : \"light\"\n    localStorage.setItem(\"theme\", color);\n    // play(playSound,'ok')\n  }\n  let changeThemeColor = (pr, se) => {\n    setColorP(pr)\n    setColorS(se)\n  }\n\n  return (\n    <ThemeProvider theme={tm == \"dark\" ? dark : white}>\n      <React.Fragment>\n\n        <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} open={notificacion != null} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={notificacion != null ? notificacion.type : \"success\"}>\n            {notificacion != null ? notificacion.message : \"\"}\n          </Alert>\n        </Snackbar>\n\n        {loader != false ?\n          <LinearProgress style={{ zIndex: 9999 }} color=\"secondary\" />\n\n          :\n          null\n        }\n\n\n        <CssBaseline />\n\n        <Grid container style={{ flexGrow: 1}}>\n          <Grid item xs={12}>\n\n            <Drawer2  history={history}>\n              <Box component=\"main\"  >\n\n                <Switch>\n                  <Route exact path=\"/login\" component={Login} />\n                  <Route exact path=\"/panel\" component={Panel} />\n                 \n                  \n                  <Route render={() => <Redirect to=\"/panel\" />} />\n                  \n                </Switch>\n\n\n\n              </Box>\n            </Drawer2>\n\n          </Grid>\n        </Grid>\n\n\n\n      </React.Fragment>\n    </ThemeProvider>\n\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CARGAR_USUARIO = 'CARGAR_USUARIO'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const MOSTRAR_NOTIFICACION = 'MOSTRAR_NOTIFICACION'\r\nexport const MOSTRAR_LOADER = 'MOSTRAR_LOADER'\r\nexport const PLAY_SOUND = \"PLAY_SOUND\"\r\n","import {\r\n    CARGAR_USUARIO,\r\n    LOGOUT,MOSTRAR_NOTIFICACION,MOSTRAR_LOADER,PLAY_SOUND\r\n  } from \"../actions/Actions\";\r\n  \r\n  export default (state, action) => {\r\n    switch (action.type) {\r\n        case CARGAR_USUARIO:\r\n            return { ...state, usuario: action.payload };\r\n        case LOGOUT:\r\n            return { ...state, usuario: null,};\r\n        case MOSTRAR_NOTIFICACION:\r\n            return { ...state, notificacion: action.payload ,};\r\n            case PLAY_SOUND:\r\n                return { ...state, sound: action.payload ,};\r\n                \r\n        case MOSTRAR_LOADER:\r\n            return { ...state, loader: action.payload ,};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n  };\r\n  ","import React from 'react'\r\nimport Initializer from './Initializer'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Propager(props) {\r\n    let history = useHistory();\r\n\r\n    const {usuario,cargarUsuario}=React.useContext(Initializer)\r\n    React.useEffect(()=>{\r\n        if( localStorage.getItem('is_login')==null&&history.location.pathname!='/login'){      \r\n            history.push(\"/login\")\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        props.children\r\n    )\r\n}\r\n","import React, { useReducer } from \"react\";\r\nimport Initializer from \"./Initializer\";\r\nimport Reducer from \"./reducer/Reducer\";\r\nimport Propager from \"./Propager\";\r\nimport {\r\n  CARGAR_USUARIO,\r\n  LOGOUT,MOSTRAR_NOTIFICACION,MOSTRAR_LOADER,PLAY_SOUND\r\n} from \"./actions/Actions\";\r\nconst Store = (props) => {\r\n\r\n  const initialState = {\r\n    usuario: null,notificacion:null,loader:false,sound:null\r\n  };\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n  //FUNCIONES\r\n  const cargarUsuario = (usuario) => {\r\n    dispatch({\r\n      type: CARGAR_USUARIO,\r\n      payload: usuario,\r\n    });\r\n  };\r\n  const mostrarNotificacion = (data) => {\r\n    dispatch({\r\n      type: MOSTRAR_NOTIFICACION,\r\n      payload: data,\r\n    });\r\n  };\r\n  const mostrarLoader = (data) => {\r\n    dispatch({\r\n      type: MOSTRAR_LOADER,\r\n      payload: data,\r\n    });\r\n  };\r\n  const logout = () => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n  };\r\n  const playSound = (data) => {\r\n    dispatch({\r\n      type: PLAY_SOUND,\r\n      payload: data,\r\n    });\r\n  };\r\n  return (\r\n    <Initializer.Provider\r\n      value={{\r\n        sound:state.sound,\r\n        playSound,\r\n        usuario: state.usuario,\r\n        notificacion: state.notificacion,\r\n        mostrarNotificacion,\r\n        loader: state.loader,\r\n        mostrarLoader,\r\n        cargarUsuario,\r\n        logout,\r\n\r\n      }}\r\n    >\r\n     <Propager >{props.children}</Propager>\r\n    </Initializer.Provider>\r\n  );\r\n};\r\nexport default Store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n//STORE\nimport Store from './store/Store'\nReactDOM.render(\n  <Router>\n  <Store>\n    <App />\n    </Store>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}